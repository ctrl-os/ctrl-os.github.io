{"version":3,"sources":["js/utils/Effects.js","js/utils/Trunc.js","features/totalStats/totalStatsSlice.js","js/TotalStats.js","js/utils/Button.js","js/utils/SelectionValueField.js","js/utils/NumberField.js","js/utils/initialValues.js","js/Names.js","js/utils/LoadPage.js","features/sheet/sheetSlice.js","js/utils/updaters.js","js/utils/MultiField.js","js/WeaponField.js","js/CharacterField.js","js/utils/Checkbox.js","js/BuffInputField.js","js/BuffsField.js","js/ArtifactField.js","js/SetEffectField.js","js/ArtifactsView.js","js/utils/ReactionLevelDMG.js","js/DamageCalcField.js","js/DamageField.js","features/sheet/charactersSlice.js","js/SheetView.js","js/Sheet.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["effects","phys","ele","em","cr","cd","er","ATK","ART_ATK","ART_HP","ART_DEF","HP","DEF","PATK","PDEF","PHP","healb","Normal","Charge","Skill","Burst","Total","ATKSPD","CDR","MVSPD","LVL","Swirl","Overload","Eletrocharge","Superconduct","Shattered","Melt","Vaporize","Crystalize","None","longestArtifactName","generalSubs","artifactMain","flowerMain","plumeMain","sandsMain","concat","gobletMain","circletMain","weaponSub","characterAscensionStat","characterStats","weaponPassives","setEffectSubs","setEffects","artifactSub","buffsList","Array","from","Set","Trunc","value","Math","trunc","calcTotals","state","calcStat","stat","base","getVal","percent","flat","totalHP","totalATK","totalDEF","totalCrit","min","totalEM","totalCritDMG","totalATKSPD","totalRecharge","totalStatsSlice","createSlice","name","initialState","reducers","calcDelta","action","payload","oldType","oldValue","newType","newValue","newTotals","key","calcStats","stats","props","increment","source","sumStats","Char","ascensionStatType","ascensionStatValue","fill","forEach","_","artifactIndex","aTypes","aVals","artifactType","artifactValue","index","length","weaponSubstatType","weaponSubstatValue","weaponPassivesType","weaponPassivesValue","BuffType","BuffValue","BuffToggle","getStats","actions","selectStats","TotalStats","useSelector","totalAtkPercent","critDmgPercent","sumEffects","sum","i","atkType","tableData","className","Object","keys","map","rowName","atkName","Button","tabIndex","SelectionValueField","onChange","array","component","defaultValue","e","target","arrayName","hidden","hideIfFalsyOrNone","val","undefined","localeCompare","NumberField","type","onBlur","parseFloat","isNaN","NumberFieldOnLine","initialArtifactField","obj","initialField","TalentName","DamageType","ReactionMultipliers","DamageValue","monsterLevelStr","monsterResStr","resReduction","defReduction","BuffName","WeaponFieldName","avaliableFields","DamageTypes","ReactionTypes","loadPage","page","localStoreData","localStorage","getItem","data","JSON","parse","currentSheet","field","console","log","initialFields","view","sheetSlice","updateSheet","loadSheet","newState","selectSheet","sheet","updateSheetAndStatsValue","dispatch","sheetKey","shouldUpdate","delta","isArray","updateSheetValue","updateSheetAndStatsType","updateSheetArray","arrayUpdater","Names","updater","passives","sheetUpdater","multifieldAdd","add","mutator","args","multifieldRemove","remove","splice","MultiField","AddEffect","ids","fieldIDArray","push","counter","setState","addEffect","RemoveEffect","removeEffect","ComponentRenderer","id","Component","wrapperClass","onClick","render","children","React","cloneElement","buttonText","title","initialLength","TableComponent","tableProps","style","overflowY","WeaponPassiveInput","useDispatch","updateType","updateValue","weaponPassiveTypeValue","onPassiveValueChange","onPassiveTypeChange","weaponPassiveInputComponent","selectionName","WeaponField","weaponPassiveLength","changePassiveType","changePassiveValue","multifieldFields","weaponSubstatInputComponent","CharacterField","ascStatType","ascStatValue","ascStat","updateAscType","updateAscValue","Checkbox","defaultChecked","BuffInputField","updateName","updateToggle","toggleSheetAndStatsValue","BuffTypeValue","onNameChange","onTypeChange","onValueChange","onToggleChange","BuffsField","buffEffectLength","PassiveInputComponent","ArtifactField","artifactTypesString","ArtifactNum","artifactValuesString","artifactTypeValue","updateArtifactType","updateArtifactValue","artifactMainStatInputComponent","mainStats","hideable","subStatIndex","artifactSubFieldInputComponent","artifactSubField","artifactSetEffectType","artifactSetEffectValue","SetEffectField","artifactSetEffectLength","artifactSetEffectTypeValue","border","artifactSetEffectInputComponent","views","setEffect","options","ArtifactsView","useState","setView","renderOnView","selectionButton","elem","disabled","ButtonIndex","childProps","lvlConstraint","x","out","ol","pow","shattered","ec","swirl","sc","Electrocharge","EMReactionDamage","rd","EMVaportizeMelt","vm","EMCalc","DamageTypeStr","TalentMultiplierStr","calcRes","res","red","calcDef","plvl","mlvl","dr","DamageCalcField","SetTypeValue","Critical","includes","DamagePercent","EQB","ReactionMultiplier","monsterDefense","max","monsterResistance","Damage","floor","calcDamage","EQA","charLevel","reaction","calcReaction","toLocaleString","DamageField","SetTypeLength","changeDamageType","changeDamageValue","requiredFields","missingArray","filter","totRes","totDef","mobDefInputFields","join","characters","characterSlice","newData","names","UID","uuidv4","setItem","stringify","addNewCharacter","renameCharacter","deleteCharacter","selectCharacters","StatsView","SheetView","currentView","textInput","setText","input","Export","Sheet","savePage","window","addEventListener","useEffect","changePage","width","App","configureStore","reducer","charactersReducer","sheetReducer","totalStatsReducer","Boolean","location","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.05da9fb6.chunk.js","sourcesContent":["const effects = {\r\n  phys: \"Phys. DMG (%)\",\r\n  ele: \"Elemental DMG (%)\",\r\n  em: \"Elemental Mastery\",\r\n  cr: \"Crit Rate (%)\",\r\n  cd: \"Crit DMG (%)\",\r\n  er: \"Energy Recharge (%)\",\r\n  ATK: \"ATK\",\r\n  ART_ATK: \"+ATK\",\r\n  ART_HP: \"+HP\",\r\n  ART_DEF: \"+DEF\",\r\n  HP: \"HP\",\r\n  DEF: \"DEF\",\r\n  PATK: \"%ATK\",\r\n  PDEF: \"%DEF\",\r\n  PHP: \"%HP\",\r\n  healb: \"Healing Bonus (%)\",\r\n  Normal: \"Normal Attack (%)\",\r\n  Charge: \"Charge Attack (%)\",\r\n  Skill: \"Ele. Skill DMG (%)\",\r\n  Burst: \"Ele. Burst D.MG (%)\",\r\n  Total: \"Total DMG (%)\",\r\n  ATKSPD: \"Attack Speed (%)\",\r\n  CDR: \"Cool Down (%)\",\r\n  MVSPD: \"Movement Speed (%)\",\r\n  LVL: \"LVL\",\r\n  Swirl: \"Swirl DMG (%)\",\r\n  Overload: \"Overload DMG (%)\",\r\n  Eletrocharge: \"Eletrocharge DMG (%)\",\r\n  Superconduct: \"Superconduct DMG (%)\",\r\n  Shattered: \"Shattered DMG (%)\",\r\n  Melt: \"Melt DMG (%)\",\r\n  Vaporize: \"Vaporize DMG (%)\",\r\n  Crystalize: \"Crystalize DMG (%)\",\r\n  None: \"None\",\r\n};\r\nconst longestArtifactName = effects.er;\r\nconst generalSubs = [\r\n  effects.cr,\r\n  effects.cd,\r\n  effects.er,\r\n  effects.em,\r\n  effects.PATK,\r\n  effects.PDEF,\r\n  effects.PHP,\r\n];\r\nconst artifactMain = [effects.em, effects.PATK, effects.PHP, effects.PDEF];\r\nconst flowerMain = [effects.ART_HP];\r\nconst plumeMain = [effects.ART_ATK];\r\nconst sandsMain = [effects.er].concat(artifactMain);\r\nconst gobletMain = [effects.ele, effects.phys].concat(artifactMain);\r\nconst circletMain = [effects.cr, effects.cd, effects.healb].concat(artifactMain);\r\nconst weaponSub = [effects.None, effects.phys].concat(generalSubs);\r\nconst characterAscensionStat = [effects.None].concat(generalSubs);\r\nconst characterStats = [effects.LVL, effects.HP, effects.ATK, effects.DEF];\r\nconst weaponPassives = [\r\n  effects.None,\r\n  effects.ele,\r\n  effects.phys,\r\n  effects.Skill,\r\n  effects.Burst,\r\n  effects.Normal,\r\n  effects.Charge,\r\n  effects.Total,\r\n  effects.MVSPD,\r\n  effects.ATKSPD,\r\n].concat(generalSubs);\r\nconst setEffectSubs = [\r\n  effects.Swirl,\r\n  effects.Overload,\r\n  effects.Eletrocharge,\r\n  effects.Superconduct,\r\n  effects.Melt,\r\n  effects.Vaporize,\r\n]\r\nconst setEffects = [].concat(weaponPassives).concat(setEffectSubs);\r\nconst artifactSub = [\r\n  effects.None,\r\n  effects.ART_HP,\r\n  effects.ART_ATK,\r\n  effects.ART_DEF,\r\n].concat(generalSubs);\r\nconst buffsList = Array.from(new Set([\"None\"].concat(artifactSub).concat(weaponPassives)))\r\n\r\nexport {\r\n  effects,\r\n  setEffects,\r\n  weaponSub,\r\n  longestArtifactName,\r\n  characterAscensionStat,\r\n  characterStats,\r\n  weaponPassives,\r\n  artifactSub,\r\n  flowerMain,\r\n  plumeMain,\r\n  sandsMain,\r\n  gobletMain,\r\n  circletMain,\r\n  buffsList,\r\n};\r\n","var Trunc = (value) => Math.trunc(value * 100) / 100;\r\nexport { Trunc };\r\n","import { createSlice } from '@reduxjs/toolkit';\r\nimport { Trunc } from \"../../js/utils/Trunc.js\";\r\nimport { effects } from \"../../js/utils/Effects.js\";\r\n\r\nvar getStats = (props) => {\r\n    const increment = (source, value) =>\r\n        source ? source + (value || 0) : value || 0;\r\n    const sumStats = {};\r\n\r\n    const { LVL, HP, DEF, ATK } = props;\r\n    const Char = { LVL, HP, DEF, ATK };\r\n    const { ascensionStatType, ascensionStatValue } = props;\r\n    for (var key in Char) {\r\n        sumStats[key] = increment(sumStats[key], Char[key]);\r\n    }\r\n    sumStats[ascensionStatType] = increment(\r\n        sumStats[ascensionStatType],\r\n        ascensionStatValue\r\n    );\r\n    Array(6)\r\n        .fill(0)\r\n        .forEach((_, artifactIndex) => {\r\n            const aTypes = `artifactTypes-${artifactIndex}`;\r\n            const aVals = `artifactValues-${artifactIndex}`;\r\n            const artifactType = props[aTypes];\r\n            const artifactValue = props[aVals];\r\n            for (var index = 0; artifactType && index < artifactType.length; index++) {\r\n                sumStats[artifactType[index]] = increment(\r\n                    sumStats[artifactType[index]],\r\n                    artifactValue[index]\r\n                );\r\n            }\r\n        });\r\n    sumStats[props.weaponSubstatType] = increment(\r\n        sumStats[props.weaponSubstatType],\r\n        props.weaponSubstatValue\r\n    );\r\n    const { weaponPassivesType, weaponPassivesValue } = props;\r\n    for (var index = 0; weaponPassivesType && index < weaponPassivesType.length; index++) {\r\n        sumStats[weaponPassivesType[index]] = increment(\r\n            sumStats[weaponPassivesType[index]],\r\n            weaponPassivesValue[index]\r\n        );\r\n    }\r\n    const { BuffType, BuffValue, BuffToggle } = props;\r\n    for (index = 0; BuffType && index < BuffType.length; index++) {\r\n        if (BuffToggle[index]) {\r\n            sumStats[BuffType[index]] = increment(\r\n                sumStats[BuffType[index]],\r\n                BuffValue[index]\r\n            );\r\n        }\r\n    }\r\n    return calcTotals(sumStats);\r\n};\r\nconst calcTotals = (state) => {\r\n    const calcStat = (stat) => {\r\n        const base = getVal(stat) || 0;\r\n        const percent = getVal(\"%\" + stat) / 100;\r\n        const flat = getVal(\"+\" + stat) || 0;\r\n        return Trunc(base * (1 + percent) + flat);\r\n    };\r\n    const getVal = (stat) => {\r\n        return state[stat] || 0;\r\n    };\r\n    state.totalHP = calcStat(effects.HP);\r\n    state.totalATK = calcStat(effects.ATK);\r\n    state.totalDEF = calcStat(effects.DEF);\r\n    state.totalCrit = Math.min(100, 5 + getVal(effects.cr));\r\n    state.totalEM = getVal(effects.em);\r\n    state.totalCritDMG = 50 + getVal(effects.cd);\r\n    state.totalATKSPD = 100 + getVal(effects.ATKSPD);\r\n    state.totalRecharge = 100 + getVal(effects.er);\r\n    return state;\r\n};\r\n\r\nexport const totalStatsSlice = createSlice({\r\n    name: 'stats',\r\n    initialState: {},\r\n    reducers: {\r\n        calcDelta: (state, action) => {\r\n            const { oldType, oldValue, newType, newValue } = action.payload\r\n            if (oldType)\r\n                state[oldType] = (state[oldType] || 0) - (oldValue || 0);\r\n            state[newType] = (state[newType] || 0) + (newValue || 0);\r\n            const newTotals = calcTotals(state)\r\n            for (var key in newTotals)\r\n                state[key] = newTotals[key]\r\n        },\r\n        calcStats: (state, action) => {\r\n            const stats = getStats(action.payload)\r\n            for (var key in stats) {\r\n                state[key] = stats[key];\r\n            }\r\n        }\r\n    },\r\n});\r\n\r\nexport const { calcDelta, calcStats } = totalStatsSlice.actions;\r\nexport const selectStats = state => state.stats;\r\nexport default totalStatsSlice.reducer;\r\n","import React from \"react\";\r\nimport { effects } from \"./utils/Effects.js\";\r\nimport \"../css/TotalStats.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectStats } from \"../features/totalStats/totalStatsSlice.js\";\r\nimport { Trunc } from \"./utils/Trunc.js\";\r\nimport \"../css/TotalStats.css\";\r\nconst TotalStats = () => {\r\n  const props = useSelector(selectStats);\r\n  const {\r\n    totalHP,\r\n    totalATK,\r\n    totalDEF,\r\n    totalCrit,\r\n    totalCritDMG,\r\n    totalATKSPD,\r\n    totalRecharge,\r\n    totalEM,\r\n  } = props;\r\n\r\n\r\n  const getVal = (stat) => {\r\n    const val = props[stat] || 0;\r\n    return val;\r\n  };\r\n  const totalAtkPercent = Trunc((totalATK / (getVal(effects.ATK) || 1)) * 100);\r\n  const normalAtkPercent = 1 - totalCrit / 100;\r\n  const critDmgPercent =\r\n    Trunc(normalAtkPercent + (totalCrit / 100) * (1 + totalCritDMG / 100)) *\r\n    100;\r\n\r\n  const sumEffects = (...effects) => {\r\n    var sum = 0;\r\n    for (const i in effects) {\r\n      sum += getVal(effects[i]);\r\n    }\r\n    return sum;\r\n  };\r\n  const normalAttackPercent =\r\n    100 + sumEffects(effects.Normal, effects.Total, effects.phys);\r\n  const chargeAttackPercent =\r\n    100 + sumEffects(effects.Charge, effects.Total, effects.phys);\r\n  const eleNormal =\r\n    100 + sumEffects(effects.Normal, effects.Total, effects.ele);\r\n  const eleCharge =\r\n    100 + sumEffects(effects.Charge, effects.Total, effects.ele);\r\n  const Skill = 100 + sumEffects(effects.Skill, effects.Total, effects.phys);\r\n  const Burst = 100 + sumEffects(effects.Burst, effects.Total, effects.phys);\r\n\r\n  const atkType = {\r\n    \"P. Normal\": normalAttackPercent,\r\n    \"P. Charge\": chargeAttackPercent,\r\n    \"E. Normal\": eleNormal,\r\n    \"E. Charge\": eleCharge,\r\n    \"E. Skill\": Skill,\r\n    \"E. Burst\": Burst,\r\n  };\r\n  const tableData = {\r\n    \"Total HP\": totalHP,\r\n    \"Total ATK\": totalATK,\r\n    \"Total DEF\": totalDEF,\r\n    \"Elemental Mastery\": totalEM,\r\n    \"Critical Rate\": `${totalCrit}%`,\r\n    \"Critical Damage\": `${totalCritDMG}%`,\r\n    \"Attack Speed\": `${totalATKSPD}%`,\r\n    \"Energy Recharge\": `${totalRecharge}%`,\r\n    \"\":null,\r\n    \"Multipliers\":null,\r\n    \"ATK Multiplier\": `${totalAtkPercent}%`,\r\n    \"CRIT Multiplier\": `${critDmgPercent}%`,\r\n  }\r\n  return (\r\n    <>\r\n      <table className=\"table__table\">\r\n        <tbody>\r\n          {Object.keys(tableData).map((rowName, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td className=\"table__td\">\r\n                  {rowName}\r\n                </td>\r\n                <td className=\"table__td\">\r\n                  {tableData[rowName]}\r\n                </td>\r\n              </tr>\r\n            )\r\n          })}\r\n\r\n          <tr>\r\n            <th className=\"table__th\">Attack Type</th>\r\n            <th className=\"table__th\"></th>\r\n          </tr>\r\n          {Object.keys(atkType).map((atkName) => (\r\n            <tr key={atkName}>\r\n              <td className=\"table__td\">{atkName}</td>\r\n              <td className=\"table__td\">{atkType[atkName]}%</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TotalStats;\r\n\r\n","import React from \"react\";\r\nvar Button = (props) => {\r\n  return <button tabIndex={-1} {...props} />;\r\n};\r\n\r\nexport { Button };\r\n","import React, { Fragment } from \"react\";\r\nimport { longestArtifactName } from \"./Effects.js\";\r\nimport \"./SelectionValueField.css\"\r\nvar SelectionValueField = (props) => {\r\n  var { onChange, array, component, defaultValue } = props;\r\n  return (\r\n    <span>\r\n      <select\r\n        className={props.className || \"element__selectField--default\"}\r\n        tabIndex={-1}\r\n        defaultValue={defaultValue}\r\n        onChange={(e) => onChange(e.target.value, true)}\r\n      >\r\n        {array.map((arrayName) => {\r\n          return (\r\n            <option key={arrayName} value={arrayName}>\r\n              {arrayName}\r\n            </option>\r\n          );\r\n        })}\r\n        <option hidden>{longestArtifactName}</option>\r\n        {/* Just to keep selection field lengths consistent. */}\r\n      </select>\r\n      {component}\r\n    </span>\r\n  );\r\n};\r\n\r\nvar hideIfFalsyOrNone = (val, component) => {\r\n  return val === undefined || val === null || val.localeCompare(\"None\") === 0 ? (\r\n    <Fragment />\r\n  ) : (\r\n      component\r\n    );\r\n};\r\n\r\nexport { SelectionValueField, hideIfFalsyOrNone };\r\n","import React from \"react\";\r\nimport \"./NumberField.css\";\r\nvar NumberField = (props) => {\r\n  return (\r\n    <input\r\n      className={props.className || \"item__fillWidth\"}\r\n      type=\"number\"\r\n      key={props.defaultValue}\r\n      defaultValue={props.defaultValue === undefined ? '' : props.defaultValue}\r\n      onBlur={(e) => {\r\n        const value = parseFloat(e.target.value);\r\n        props.onChange(isNaN(value) ? null : value);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nvar NumberFieldOnLine = (props) => (\r\n  <>\r\n    {props.name} <NumberField {...props} />\r\n  </>\r\n);\r\n\r\nexport { NumberField, NumberFieldOnLine };\r\n","import { effects } from \"./Effects.js\";\r\nconst initialDamageField = {\r\n  TalentName: [],\r\n  DamageType: [],\r\n  ReactionMultipliers: [],\r\n  DamageValue: [],\r\n  monsterLevelStr: 0,\r\n  monsterResStr: 0,\r\n  resReduction: 0,\r\n  defReduction: 0,\r\n};\r\nconst initialBuffsField = {\r\n  BuffName: [],\r\n  BuffType: [],\r\n  BuffValue: [],\r\n  BuffToggle: [],\r\n}\r\nconst initialCharacterField = {\r\n  ascensionStatType: \"None\",\r\n  ascensionStatValue: 0,\r\n  HP: '',\r\n  LVL: '',\r\n  ATK: '',\r\n  DEF: '',\r\n};\r\nconst initialArtifactField = (() => {\r\n  var obj = {};\r\n  Array(5)\r\n    .fill(0)\r\n    .forEach((_, index) => {\r\n      obj[`artifactTypes-${index}`] = Array(5).fill(null);\r\n      obj[`artifactValues-${index}`] = Array(5).fill(0);\r\n    });\r\n  obj[`artifactTypes-0`][0] = effects.ART_HP;\r\n  obj[`artifactTypes-1`][0] = effects.ART_ATK;\r\n  obj[`artifactTypes-2`][0] = effects.er;\r\n  obj[`artifactTypes-3`][0] = effects.ele;\r\n  obj[`artifactTypes-4`][0] = effects.cr;\r\n  obj[`artifactTypes-5`] = [];\r\n  obj[`artifactValues-5`] = [];\r\n  return obj;\r\n})();\r\nconst initialWeaponField = {\r\n  weaponSubstatType: \"None\",\r\n  weaponPassivesType: [],\r\n  weaponPassivesValue: [],\r\n};\r\n\r\nconst initialField = {\r\n  ...initialWeaponField,\r\n  ...initialDamageField,\r\n  ...initialCharacterField,\r\n  ...initialArtifactField,\r\n  ...initialBuffsField,\r\n};\r\nexport default initialField;\r\n","const WeaponFieldName = \"WeaponField\";\r\nconst ArtifactFieldName = \"ArtifactField\";\r\nconst CharacterFieldName = \"CharacterField\";\r\nconst DamageFieldName = \"DamageField\";\r\nconst avaliableFields = [\r\n  WeaponFieldName,\r\n  ArtifactFieldName,\r\n  CharacterFieldName,\r\n  DamageFieldName,\r\n];\r\nconst DamageTypes = [\r\n  \"None\",\r\n  \"Phys. Normal\",\r\n  \"Phys. Charge\",\r\n  \"Ele. Normal\",\r\n  \"Ele. Charge\",\r\n  \"Ele. Skill\",\r\n  \"Ele. Burst\",\r\n]\r\nconst ReactionTypes = [\"Swirl\", \"Overload\", \"Electrocharge\", \"Superconduct\", \"Shattered\"]\r\nexport {\r\n  WeaponFieldName,\r\n  ArtifactFieldName,\r\n  CharacterFieldName,\r\n  DamageFieldName,\r\n  avaliableFields,\r\n  DamageTypes,\r\n  ReactionTypes\r\n};\r\n","import {\r\n    WeaponFieldName,\r\n    avaliableFields,\r\n} from \"../Names.js\";\r\n\r\nexport const loadPage = (page) => {\r\n    const localStoreData = localStorage.getItem(page);\r\n    try {\r\n        const data = localStoreData ? JSON.parse(localStoreData) : {};\r\n        var state = { currentSheet: page }\r\n        if (data[WeaponFieldName]) {\r\n            avaliableFields.forEach(field => {\r\n                var val = data[field] !== 'undefined' ? JSON.parse(data[field]) : {}\r\n                state = data[field] ? { ...state, ...val } : {};\r\n            })\r\n        }\r\n        else state = { ...data };\r\n        return state;\r\n    }\r\n    catch (e) {\r\n        console.log(e)\r\n    }\r\n};","import { createSlice } from '@reduxjs/toolkit';\r\nimport initialFields from \"../../../src/js/utils/initialValues.js\";\r\nimport { loadPage } from '../../../src/js/utils/LoadPage.js';\r\nconst initialState = {\r\n    ...initialFields,\r\n    currentSheet: 'null',\r\n    view: '',\r\n}\r\nexport const sheetSlice = createSlice({\r\n    name: 'sheet',\r\n    initialState: { ...initialState, ...loadPage('CharacterSheet1') },\r\n    reducers: {\r\n        updateSheet: (state, action) => {\r\n            for (var key in action.payload)\r\n                state[key] = action.payload[key];\r\n        },\r\n        loadSheet: (state, action) => {\r\n            const newState = { ...initialState, ...action.payload }\r\n            for (var key in newState)\r\n                state[key] = newState[key];\r\n        }\r\n    },\r\n});\r\n\r\nexport const { updateSheet, loadSheet } = sheetSlice.actions;\r\nexport const selectSheet = state => state.sheet;\r\nexport default sheetSlice.reducer;\r\n","import { updateSheet } from \"../../features/sheet/sheetSlice.js\";\r\nimport { calcDelta } from \"../../features/totalStats/totalStatsSlice.js\";\r\n\r\nconst updateSheetAndStatsValue = (dispatch) => (oldType, oldValue, sheetKey, index = 0, shouldUpdate = true) => (value) => {\r\n    var delta = { oldType: oldType, oldValue: oldValue };\r\n    if (Array.isArray(value)) {\r\n        delta.newType = oldType;\r\n        delta.newValue = value[index];\r\n    }\r\n    else {\r\n        delta.newType = oldType;\r\n        delta.newValue = value;\r\n    }\r\n\r\n    if (!Array.isArray(oldType) && shouldUpdate) dispatch(calcDelta(delta))\r\n    updateSheetValue(dispatch)(sheetKey)(value)\r\n}\r\nconst updateSheetAndStatsType = (dispatch) => (oldType, oldValue, sheetKey, index = 0, shouldUpdate = true) => (value) => {\r\n    var delta = { oldType: oldType, oldValue: oldValue };\r\n    if (Array.isArray(value)) {\r\n        delta.newType = value[index];\r\n        delta.newValue = oldValue;\r\n    }\r\n    else {\r\n        delta.newType = value;\r\n        delta.newValue = oldValue;\r\n    }\r\n    if (!Array.isArray(oldType) && shouldUpdate) dispatch(calcDelta(delta))\r\n    updateSheetValue(dispatch)(sheetKey)(value)\r\n}\r\nconst toggleSheetAndStatsValue = (dispatch) => (oldType, oldValue, sheetKey, index = 0) => (value) => {\r\n    var delta = { oldType: oldType };\r\n    if (Array.isArray(value)) {\r\n        delta.oldValue = oldValue * (!value[index])\r\n        delta.newType = oldType;\r\n        delta.newValue = oldValue * value[index];\r\n    }\r\n    else {\r\n        delta.oldValue = oldValue * (!value[index])\r\n        delta.newType = oldType;\r\n        delta.newValue = oldValue * value;\r\n    }\r\n    if (!Array.isArray(oldType)) dispatch(calcDelta(delta))\r\n    updateSheetValue(dispatch)(sheetKey)(value)\r\n}\r\nconst updateSheetValue = (dispatch) => (key) => (value) => {\r\n    dispatch(updateSheet({ [key]: value }))\r\n}\r\nconst updateSheetArray = (dispatch) => (oldType, oldValue, sheetKey, index = 0) => (value) => {\r\n    dispatch(updateSheet({ [sheetKey]: value }))\r\n}\r\nconst arrayUpdater = (Names, updater, props) => (key, index, shouldUpdate) => (value) => {\r\n    var passives = [...props[key]];\r\n    passives[index] = value;\r\n    updater(...Names.map((name) => props[name][index]), key, index, shouldUpdate)(passives)\r\n}\r\nconst sheetUpdater = (Names, updater, props) => key => value => {\r\n    updater(...Names.map((name) => props[name]), key)(value)\r\n}\r\n\r\nexport { updateSheetAndStatsValue, updateSheetAndStatsType, toggleSheetAndStatsValue, arrayUpdater, sheetUpdater, updateSheetValue, updateSheetArray }","import React from \"react\";\r\n\r\nimport { Button } from \"./Button.js\";\r\nimport \"../../css/MultiField.css\";\r\n\r\n/**\r\n * props: initialLength, title, buttonText, addEffect, removeEffect\r\n */\r\n\r\nconst multifieldAdd = (props, array) => () => {\r\n  const add = (mutator, name, value = undefined) => {\r\n    const updater = mutator(name);\r\n    updater(props[name].concat(value));\r\n  };\r\n  array.forEach((args) => {\r\n    add(...args);\r\n  });\r\n};\r\nconst multifieldRemove = (props, array) => (index) => {\r\n  const remove = (mutator, name, value, sheetUpdater = () => () => {}) => {\r\n    const updater = mutator(name);\r\n    var newState = [...props[name]];\r\n    newState.splice(index, 1);\r\n    sheetUpdater(name, index)(0);\r\n    updater(newState);\r\n  };\r\n  array.forEach((args) => {\r\n    remove(...args);\r\n  });\r\n};\r\n\r\nclass MultiField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var initialLength = this.props.initialLength || 0;\r\n    var fieldIDArray;\r\n    fieldIDArray = Array(initialLength)\r\n      .fill(0)\r\n      .map((_, index) => index);\r\n    this.state = {\r\n      fieldIDArray: fieldIDArray,\r\n      counter: fieldIDArray.length,\r\n    };\r\n  }\r\n\r\n  AddEffect = () => {\r\n    var ids = this.state.fieldIDArray;\r\n    ids.push(this.state.counter);\r\n    this.setState({\r\n      fieldIDArray: ids,\r\n      counter: this.state.counter + 1,\r\n    });\r\n    this.props.addEffect();\r\n  };\r\n\r\n  RemoveEffect = (index) => {\r\n    var ids = this.state.fieldIDArray;\r\n    ids.splice(index, 1);\r\n    this.setState({ fieldIDArray: ids });\r\n    this.props.removeEffect(index);\r\n  };\r\n\r\n  ComponentRenderer = (id, index, Component) => (\r\n    <div key={id}>\r\n      <div\r\n        className={this.props.wrapperClass || \"section__MultiField--spacing\"}\r\n      >\r\n        <Component id={id} index={index} />\r\n        <Button onClick={() => this.RemoveEffect(index)}>Remove</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n  render = () => {\r\n    return (\r\n      <>\r\n        {this.props.children ? (\r\n          React.cloneElement(this.props.children, {\r\n            key: this.state.fieldIDArray.length,\r\n            className:\r\n              this.state.fieldIDArray.length > 3\r\n                ? \"section__MultiField--scrollView\"\r\n                : \"section__MultiField\",\r\n            array: this.state.fieldIDArray,\r\n            remove: (index) => (\r\n              <Button onClick={() => this.RemoveEffect(index)}>Remove</Button>\r\n            ),\r\n            add: () => (\r\n              <Button onClick={() => this.AddEffect()}>\r\n                {this.props.buttonText || \"Add\"}\r\n              </Button>\r\n            ),\r\n          })\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              {this.props.title || \"\"}\r\n              <Button onClick={() => this.AddEffect()}>\r\n                {this.props.buttonText || \"Add\"}\r\n              </Button>\r\n            </div>\r\n            <div\r\n              key={this.state.fieldIDArray.length}\r\n              className={\r\n                this.state.fieldIDArray.length > 3\r\n                  ? \"section__MultiField--scrollView\"\r\n                  : \"section__MultiField\"\r\n              }\r\n            >\r\n              {this.state.fieldIDArray\r\n                ? this.state.fieldIDArray.map((id, index) => {\r\n                    return this.ComponentRenderer(\r\n                      id,\r\n                      index,\r\n                      this.props.component\r\n                    );\r\n                  })\r\n                : null}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\nexport { MultiField, multifieldAdd, multifieldRemove };\r\n","import React from \"react\";\r\nimport { weaponSub, weaponPassives } from \"./utils/Effects.js\";\r\nimport \"../css/WeaponField.css\";\r\nimport {\r\n  SelectionValueField,\r\n  hideIfFalsyOrNone,\r\n} from \"./utils/SelectionValueField.js\";\r\nimport { NumberField, NumberFieldOnLine } from \"./utils/NumberField.js\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  updateSheetAndStatsValue,\r\n  arrayUpdater,\r\n  sheetUpdater,\r\n} from \"./utils/updaters.js\";\r\nimport {\r\n  MultiField,\r\n  multifieldAdd,\r\n  multifieldRemove,\r\n} from \"./utils/MultiField.js\";\r\n\r\nconst weaponPassivesType = \"weaponPassivesType\";\r\nconst weaponPassivesValue = \"weaponPassivesValue\";\r\nconst weaponSubstatType = \"weaponSubstatType\";\r\nconst weaponSubstatValue = \"weaponSubstatValue\";\r\n\r\nconst WeaponField = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const dispatch = useDispatch();\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n  const weaponPassiveTypeValue = [weaponPassivesType, weaponPassivesValue];\r\n  const weaponPassiveLength = props.weaponPassivesType\r\n    ? props.weaponPassivesType.length\r\n    : 0;\r\n  const onPassiveValueChange = arrayUpdater(\r\n    weaponPassiveTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n\r\n  const changePassiveType = sheetUpdater(\r\n    weaponPassiveTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n  const changePassiveValue = sheetUpdater(\r\n    weaponPassiveTypeValue,\r\n    updateType,\r\n    props\r\n  );\r\n  const multifieldFields = [\r\n    [changePassiveType, weaponPassivesType],\r\n    [changePassiveValue, weaponPassivesValue, 0, onPassiveValueChange],\r\n  ];\r\n  const weaponSubstatInputComponent = hideIfFalsyOrNone(\r\n    props[weaponSubstatType],\r\n    <NumberFieldOnLine\r\n      onChange={updateValue(\r\n        props[weaponSubstatType],\r\n        props[weaponSubstatValue],\r\n        weaponSubstatValue\r\n      )}\r\n      defaultValue={props[weaponSubstatValue]}\r\n    />\r\n  );\r\n  return (\r\n    <div>\r\n      Weapon Substat\r\n      <table className=\"table__table\">\r\n        {/* <thead className=\"table__th\">\r\n          <tr>\r\n            <th> Weapon Substat </th>\r\n            <th></th>\r\n          </tr>\r\n        </thead> */}\r\n        <tbody className=\"table__td\">\r\n          <tr>\r\n            <td>\r\n              <SelectionValueField\r\n                array={weaponSub}\r\n                onChange={updateType(\r\n                  props[weaponSubstatType],\r\n                  props[weaponSubstatValue],\r\n                  weaponSubstatType\r\n                )}\r\n                defaultValue={props[weaponSubstatType]}\r\n              />\r\n            </td>\r\n            <td>{weaponSubstatInputComponent}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      <MultiField\r\n        initialLength={weaponPassiveLength}\r\n        title=\"Weapon Passive\"\r\n        buttonText=\"Add Passive\"\r\n        component={WeaponPassiveInput}\r\n        addEffect={multifieldAdd(props, multifieldFields)}\r\n        removeEffect={multifieldRemove(props, multifieldFields)}\r\n      >\r\n        <TableComponent />\r\n      </MultiField>\r\n    </div>\r\n  );\r\n};\r\nconst TableComponent = (tableProps) => {\r\n  return (\r\n    <div  style={{ overflowY: \"scroll\", \"maxHeight\": \"178px\", 'border': '1px solid white' }}>\r\n      <table className=\"table__table\">\r\n        <thead>\r\n          <tr>\r\n            {[\"Type\", \"Value\"].map((rowName, index) => (\r\n              <th className=\"table__th\" key={index}>\r\n                {rowName}\r\n              </th>\r\n            ))}\r\n            <th> {tableProps.add()} </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableProps.array.map((id, index) => {\r\n            return WeaponPassiveInput({ id, index, remove: tableProps.remove });\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WeaponPassiveInput = ({ id, index, remove }) => {\r\n  const dispatch = useDispatch();\r\n  const props = useSelector(selectSheet);\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n  const weaponPassiveTypeValue = [weaponPassivesType, weaponPassivesValue];\r\n  const onPassiveValueChange = arrayUpdater(\r\n    weaponPassiveTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n  const onPassiveTypeChange = arrayUpdater(\r\n    weaponPassiveTypeValue,\r\n    updateType,\r\n    props\r\n  );\r\n  const weaponPassiveInputComponent = (\r\n    <>\r\n      {hideIfFalsyOrNone(\r\n        props[weaponPassivesType][index],\r\n        <NumberField\r\n          onChange={onPassiveValueChange(weaponPassivesValue, index)}\r\n          defaultValue={props[weaponPassivesValue][index]}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n  return (\r\n    <tr key={id}>\r\n      <td>\r\n        <SelectionValueField\r\n          selectionName={weaponPassivesType}\r\n          onChange={onPassiveTypeChange(weaponPassivesType, index)}\r\n          array={weaponPassives}\r\n          defaultValue={props[weaponPassivesType][index]}\r\n        />\r\n      </td>\r\n      <td>{weaponPassiveInputComponent}</td>\r\n      <td>{remove(index)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default WeaponField;\r\n","import React from \"react\";\r\nimport { characterAscensionStat, characterStats } from \"./utils/Effects.js\";\r\nimport {\r\n  SelectionValueField,\r\n  hideIfFalsyOrNone,\r\n} from \"./utils/SelectionValueField.js\";\r\nimport { NumberField } from \"./utils/NumberField.js\";\r\nimport \"../css/CharacterField.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  updateSheetAndStatsValue,\r\n  sheetUpdater,\r\n} from \"./utils/updaters.js\";\r\n\r\nconst CharacterField = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const dispatch = useDispatch();\r\n  const ascensionStatType = \"ascensionStatType\";\r\n  const ascensionStatValue = \"ascensionStatValue\";\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n  const ascStat = [ascensionStatType, ascensionStatValue];\r\n  const updateAscType = sheetUpdater(ascStat, updateType, props);\r\n  const updateAscValue = sheetUpdater(ascStat, updateValue, props);\r\n  const ascensionStatInputComponent = (ascStatType, ascStatValue) =>\r\n    hideIfFalsyOrNone(\r\n      ascStatType,\r\n      <>\r\n        <tr>\r\n          <td className={\" characterField__inputUpper\"}>\r\n            <div></div>\r\n            <NumberField\r\n              className={\"item__fillWidth\"}\r\n              defaultValue={ascStatValue}\r\n              onChange={updateAscValue(ascensionStatValue)}\r\n            />\r\n          </td>\r\n        </tr>\r\n      </>\r\n    );\r\n  return (\r\n    <div>\r\n      <div> Base Stats </div>\r\n      <table className=\"table__table item__fillWidth\">\r\n        <tbody>\r\n          {characterStats.map((name, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td className=\"table__td\">{name}</td>\r\n                <td className={\"table__td\"}>\r\n                  <NumberField\r\n                    name={name}\r\n                    className={\"item__fillWidth\"}\r\n                    defaultValue={props[name]}\r\n                    onChange={updateValue(name, props[name], name)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <table className=\"table__table item__fillWidth\">\r\n        <tbody className=\"table__td\">\r\n          <tr>\r\n            <td>Ascension Stat</td>\r\n          </tr>\r\n          <tr >\r\n            <td>\r\n              <SelectionValueField\r\n                array={characterAscensionStat}\r\n                onChange={updateAscType(ascensionStatType)}\r\n                defaultValue={props[ascensionStatType]}\r\n              />\r\n            </td>\r\n          </tr>\r\n          {ascensionStatInputComponent(\r\n            props[ascensionStatType],\r\n            props[ascensionStatValue]\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterField;\r\n","var Checkbox = (props) => {\r\n    return (\r\n        <input\r\n            type=\"checkbox\"\r\n            key={props.key}\r\n            defaultChecked={props.defaultValue}\r\n            onClick={(e) => {\r\n                props.onChange(!props.defaultValue);\r\n            }}\r\n        />\r\n    );\r\n};\r\n\r\nexport { Checkbox };","import { NumberField } from \"./utils/NumberField.js\";\r\nimport { buffsList } from \"./utils/Effects.js\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  toggleSheetAndStatsValue,\r\n  updateSheetAndStatsValue,\r\n  updateSheetArray,\r\n  arrayUpdater,\r\n} from \"./utils/updaters.js\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { selectStats } from \"../features/totalStats/totalStatsSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SelectionValueField } from \"./utils/SelectionValueField.js\";\r\nimport { Checkbox } from \"./utils/Checkbox.js\";\r\n\r\nconst BuffName = \"BuffName\";\r\nconst BuffType = \"BuffType\";\r\nconst BuffValue = \"BuffValue\";\r\nconst BuffToggle = \"BuffToggle\";\r\n\r\nconst BuffInputField = ({ id, index, remove }) => {\r\n  const dispatch = useDispatch();\r\n  const updateName = updateSheetArray(dispatch);\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n  const updateToggle = toggleSheetAndStatsValue(dispatch);\r\n  const BuffTypeValue = [BuffType, BuffValue];\r\n  const props = { ...useSelector(selectSheet), ...useSelector(selectStats) };\r\n  const onNameChange = arrayUpdater(BuffTypeValue, updateName, props);\r\n  const onTypeChange = arrayUpdater(BuffTypeValue, updateType, props);\r\n  const onValueChange = arrayUpdater(BuffTypeValue, updateValue, props);\r\n  const onToggleChange = arrayUpdater(BuffTypeValue, updateToggle, props);\r\n  return (\r\n    <tr key={id}>\r\n      <td className=\"table__td Name\">\r\n        <input\r\n          type={\"text\"}\r\n          defaultValue={props[BuffName][index]}\r\n          onBlur={(e) => onNameChange(BuffName, index)(e.target.value)}\r\n        ></input>\r\n      </td>\r\n      <td className=\"table__td Type\">\r\n        <SelectionValueField\r\n          array={buffsList}\r\n          onChange={onTypeChange(BuffType, index, props[BuffToggle][index])}\r\n          defaultValue={props[BuffType][index]}\r\n        />\r\n      </td>\r\n      <td className=\"table__td Value\">\r\n        <NumberField\r\n          onChange={onValueChange(BuffValue, index, props[BuffToggle][index])}\r\n          defaultValue={props[BuffValue][index]}\r\n        />\r\n      </td>\r\n\r\n      <td className=\"table__td Toggle\">\r\n        <Checkbox\r\n          onChange={onToggleChange(BuffToggle, index)}\r\n          defaultValue={props[BuffToggle][index]}\r\n        />\r\n      </td>\r\n\r\n      <td className=\"table__td\">{remove(index)}</td>\r\n    </tr>\r\n  );\r\n};\r\nexport default BuffInputField;\r\n","import React from \"react\";\r\nimport { artifactSub } from \"./utils/Effects.js\";\r\nimport {\r\n  SelectionValueField,\r\n  hideIfFalsyOrNone,\r\n} from \"./utils/SelectionValueField.js\";\r\nimport { NumberField } from \"./utils/NumberField.js\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  updateSheetAndStatsValue,\r\n  arrayUpdater,\r\n  sheetUpdater,\r\n} from \"./utils/updaters.js\";\r\nimport {\r\n  MultiField,\r\n  multifieldAdd,\r\n  multifieldRemove,\r\n} from \"./utils/MultiField.js\";\r\nimport \"../css/SetEffectField.css\";\r\nimport BuffInputField from \"./BuffInputField.js\";\r\n\r\nconst BuffName = \"BuffName\";\r\nconst BuffType = \"BuffType\";\r\nconst BuffValue = \"BuffValue\";\r\nconst BuffToggle = \"BuffToggle\";\r\nconst BuffTypeValue = [BuffType, BuffValue];\r\nconst BuffsField = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const dispatch = useDispatch();\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n\r\n  const buffEffectLength = props[BuffType] ? props[BuffType].length : 0;\r\n  const onPassiveTypeChange = arrayUpdater(BuffTypeValue, updateType, props);\r\n  const onPassiveValueChange = arrayUpdater(BuffTypeValue, updateValue, props);\r\n\r\n  const buffEffectInputComponent = ({ id, index }) => {\r\n    const PassiveInputComponent = (\r\n      <>\r\n        {hideIfFalsyOrNone(\r\n          props[BuffType][index],\r\n          <NumberField\r\n            onChange={onPassiveValueChange(BuffValue, index)}\r\n            defaultValue={props[BuffValue][index]}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n    return (\r\n      <div key={id}>\r\n        <SelectionValueField\r\n          selectionName={BuffType}\r\n          onChange={onPassiveTypeChange(BuffType, index)}\r\n          array={artifactSub}\r\n          component={PassiveInputComponent}\r\n          defaultValue={props[BuffType][index]}\r\n        />\r\n      </div>\r\n    );\r\n  };\r\n  const changePassiveType = sheetUpdater(BuffTypeValue, updateValue, props);\r\n  const changePassiveValue = sheetUpdater(BuffTypeValue, updateType, props);\r\n  const multifieldFields = [\r\n    [changePassiveValue, BuffName],\r\n    [changePassiveType, BuffType],\r\n    [changePassiveValue, BuffValue, 0, onPassiveValueChange],\r\n    [changePassiveValue, BuffToggle, true],\r\n  ];\r\n  return (\r\n    <div>\r\n      Buffs\r\n      <div>\r\n        <MultiField\r\n          initialLength={buffEffectLength}\r\n          buttonText=\"Add Buff\"\r\n          component={buffEffectInputComponent}\r\n          addEffect={multifieldAdd(props, multifieldFields)}\r\n          removeEffect={multifieldRemove(props, multifieldFields)}\r\n        >\r\n          <TableComponent />\r\n        </MultiField>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TableComponent = (tableProps) => {\r\n  return (\r\n    <table className=\"table__table\">\r\n      <thead>\r\n        <tr>\r\n          {[\"Buff Name\", \"Buff\", \"Buff Amount\", \"Active?\"].map(\r\n            (rowName, index) => (\r\n              <th className=\"table__th\" key={index}>\r\n                {rowName}\r\n              </th>\r\n            )\r\n          )}\r\n          <th> {tableProps.add()} </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {tableProps.array.map((id, index) => {\r\n          return BuffInputField({ id, index, remove: tableProps.remove });\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default BuffsField;\r\n","import React from \"react\";\r\nimport { artifactSub } from \"./utils/Effects.js\";\r\nimport \"../css/ArtifactField.css\";\r\nimport {\r\n  SelectionValueField,\r\n  hideIfFalsyOrNone,\r\n} from \"./utils/SelectionValueField.js\";\r\nimport { NumberField } from \"./utils/NumberField.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  updateSheetAndStatsValue,\r\n  arrayUpdater,\r\n} from \"./utils/updaters.js\";\r\n\r\nconst ArtifactField = (props) => {\r\n  props = { ...useSelector(selectSheet), ...props };\r\n  const dispatch = useDispatch();\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n  const artifactTypesString = `artifactTypes-${props.ArtifactNum}`;\r\n  const artifactValuesString = `artifactValues-${props.ArtifactNum}`;\r\n  const artifactTypeValue = [artifactTypesString, artifactValuesString];\r\n  const updateArtifactType = arrayUpdater(artifactTypeValue, updateType, props);\r\n  const updateArtifactValue = arrayUpdater(\r\n    artifactTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n  const artifactSubField = (subStatIndex) => {\r\n    const artifactSubFieldInputComponent = hideIfFalsyOrNone(\r\n      props[artifactTypesString][subStatIndex],\r\n      <NumberField\r\n        name={\"Value\"}\r\n        onChange={updateArtifactValue(artifactValuesString, subStatIndex)}\r\n        defaultValue={props[artifactValuesString][subStatIndex]}\r\n      />\r\n    );\r\n    return (\r\n      <tr key={subStatIndex}>\r\n        <td className=\"table__td\">Line #{subStatIndex}</td>\r\n        <td className=\"table__td\">\r\n          <SelectionValueField\r\n            key={subStatIndex}\r\n            array={artifactSub}\r\n            onChange={updateArtifactType(artifactTypesString, subStatIndex)}\r\n            defaultValue={props[artifactTypesString][subStatIndex]}\r\n          />\r\n        </td>\r\n        <td className=\"table__td\">{artifactSubFieldInputComponent}</td>\r\n      </tr>\r\n    );\r\n  };\r\n  const artifactMainStatInputComponent = (\r\n    <NumberField\r\n      name={\"Value\"}\r\n      onChange={updateArtifactValue(artifactValuesString, 0)}\r\n      defaultValue={props[artifactValuesString][0]}\r\n    />\r\n  );\r\n  return (\r\n    <table className=\"table__table\">\r\n      <tbody>\r\n        <tr>\r\n          <td className=\"table__td\">Main Stat</td>\r\n          <td className=\"table__td\">\r\n            <SelectionValueField\r\n              array={props.mainStats}\r\n              onChange={updateArtifactType(artifactTypesString, 0)}\r\n              defaultValue={props[artifactTypesString][0]}\r\n              hideable={false}\r\n            />\r\n          </td>\r\n          <td className=\"table__td\">{artifactMainStatInputComponent}</td>\r\n        </tr>\r\n        {Array(4)\r\n          .fill(0)\r\n          .map((_, index) => artifactSubField(index + 1))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ArtifactField;\r\n","import React from \"react\";\r\nimport { setEffects } from \"./utils/Effects.js\";\r\nimport {\r\n  SelectionValueField,\r\n  hideIfFalsyOrNone,\r\n} from \"./utils/SelectionValueField.js\";\r\nimport { NumberFieldOnLine } from \"./utils/NumberField.js\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  updateSheetAndStatsValue,\r\n  arrayUpdater,\r\n  sheetUpdater,\r\n} from \"./utils/updaters.js\";\r\nimport {\r\n  MultiField,\r\n  multifieldAdd,\r\n  multifieldRemove,\r\n} from \"./utils/MultiField.js\";\r\nimport \"../css/SetEffectField.css\";\r\nconst artifactSetEffectType = \"artifactTypes-5\";\r\nconst artifactSetEffectValue = \"artifactValues-5\";\r\n\r\nconst SetEffectField = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const dispatch = useDispatch();\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n\r\n  const artifactSetEffectLength = props[artifactSetEffectType]\r\n    ? props[artifactSetEffectType].length\r\n    : 0;\r\n  const artifactSetEffectTypeValue = [\r\n    artifactSetEffectType,\r\n    artifactSetEffectValue,\r\n  ];\r\n  const onPassiveValueChange = arrayUpdater(\r\n    artifactSetEffectTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n  const onPassiveTypeChange = arrayUpdater(\r\n    artifactSetEffectTypeValue,\r\n    updateType,\r\n    props\r\n  );\r\n  const artifactSetEffectInputComponent = ({ id, index, remove }) => {\r\n    const PassiveInputComponent = (\r\n      <>\r\n        {hideIfFalsyOrNone(\r\n          props[artifactSetEffectType][index],\r\n          <NumberFieldOnLine\r\n            onChange={onPassiveValueChange(artifactSetEffectValue, index)}\r\n            defaultValue={props[artifactSetEffectValue][index]}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n    return (\r\n      <tr key={id}>\r\n        <td>\r\n          <SelectionValueField\r\n            selectionName={artifactSetEffectType}\r\n            onChange={onPassiveTypeChange(artifactSetEffectType, index)}\r\n            array={setEffects}\r\n            defaultValue={props[artifactSetEffectType][index]}\r\n          />\r\n        </td>\r\n        <td>{PassiveInputComponent}</td>\r\n        <td>{remove(index)}</td>\r\n      </tr>\r\n    );\r\n  };\r\n  const changePassiveType = sheetUpdater(\r\n    artifactSetEffectTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n  const changePassiveValue = sheetUpdater(\r\n    artifactSetEffectTypeValue,\r\n    updateType,\r\n    props\r\n  );\r\n  const multifieldFields = [\r\n    [changePassiveType, artifactSetEffectType],\r\n    [changePassiveValue, artifactSetEffectValue, 0, onPassiveValueChange],\r\n  ];\r\n  const TableComponent = (tableProps) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          overflowY: \"scroll\",\r\n          \"maxHeight\": \"194px\",\r\n          border: \"1px solid white\",\r\n        }}\r\n      >\r\n        <table className=\"table__table\">\r\n          <thead>\r\n            <tr>\r\n              {[\"Type\", \"Value\"].map((rowName, index) => (\r\n                <th className=\"table__th\" key={index}>\r\n                  {rowName}\r\n                </th>\r\n              ))}\r\n              <th> {tableProps.add()} </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableProps.array.map((id, index) => {\r\n              return artifactSetEffectInputComponent({\r\n                id,\r\n                index,\r\n                remove: tableProps.remove,\r\n              });\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MultiField\r\n        initialLength={artifactSetEffectLength}\r\n        title=\"Passive Set Effects\"\r\n        buttonText=\"Add Passive\"\r\n        wrapperClass=\"setEffect--multifield\"\r\n        addEffect={multifieldAdd(props, multifieldFields)}\r\n        removeEffect={multifieldRemove(props, multifieldFields)}\r\n      >\r\n        <TableComponent />\r\n      </MultiField>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetEffectField;\r\n","import React, { useState } from \"react\";\r\nimport ArtifactField from \"./ArtifactField.js\";\r\nimport SetEffectField from \"./SetEffectField.js\";\r\nimport \"../css/ArtifactView.css\";\r\nimport {\r\n  flowerMain,\r\n  plumeMain,\r\n  sandsMain,\r\n  gobletMain,\r\n  circletMain,\r\n} from \"./utils/Effects.js\";\r\nimport { Button } from \"./utils/Button.js\";\r\n\r\nconst views = [\r\n  \"Flower of Life\",\r\n  \"Plume of Death\",\r\n  \"Sands of Eon\",\r\n  \"Goblet of Eonotherm\",\r\n  \"Circlet of Logos\",\r\n];\r\nconst setEffect = \"Set Effect\";\r\nconst options = [flowerMain, plumeMain, sandsMain, gobletMain, circletMain];\r\n\r\nconst ArtifactsView = () => {\r\n  const [view, setView] = useState(views[0]);\r\n  const renderOnView = (name, component) => {\r\n    return view === name ? component : <div key={name} />;\r\n  };\r\n  const selectionButton = (elem) => {\r\n    return (\r\n      <Button\r\n        className=\"artifact__buttons\"\r\n        key={elem}\r\n        disabled={view === elem}\r\n        onClick={() => setView(elem)}\r\n      >\r\n        {elem}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <span className=\"section__App--row\">\r\n          Artifacts\r\n          {options.map((_, ButtonIndex) => {\r\n            return selectionButton(views[ButtonIndex]);\r\n          })}\r\n          {selectionButton(setEffect)}\r\n        </span>\r\n        {options.map((_, ArtifactNum) => {\r\n          var childProps = {\r\n            ArtifactNum: ArtifactNum,\r\n            mainStats: options[ArtifactNum],\r\n          };\r\n          return renderOnView(\r\n            views[ArtifactNum],\r\n            <ArtifactField key={ArtifactNum} {...childProps} />\r\n          );\r\n        })}\r\n        {renderOnView(setEffect, <SetEffectField />)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArtifactsView;\r\n","import { Trunc } from \"./Trunc.js\";\r\nconst lvlConstraint = (x, out) => (x > 0 && x < 91 ? out(x) : 0);\r\nconst ol = (x) =>\r\n  Trunc(\r\n    -0.0000029347 * Math.pow(x, 5) + 0.0005506720 * Math.pow(x, 4) - 0.0332158793 * Math.pow(x, 3) + 0.9775531392 * Math.pow(x, 2) - 4.2765576885 * x + 40.4647994435\r\n  );\r\nconst shattered = (x) =>\r\n  Trunc(\r\n    -0.0000022838 * Math.pow(x, 5) + 0.0004328837 * Math.pow(x, 4) - 0.0266303723 * Math.pow(x, 3) + 0.7971700160 * Math.pow(x, 2) - 4.1553061404 * x + 34.6845277878\r\n  );\r\nconst ec = (x) =>\r\n  Trunc(\r\n    -0.0000016456 * Math.pow(x, 5) + 0.0003056403 * Math.pow(x, 4) - 0.0180630927 * Math.pow(x, 3) + 0.5286068156 * Math.pow(x, 2) - 1.9083528517 * x + 23.1971984890\r\n  );\r\nconst swirl = (x) =>\r\n  Trunc(\r\n    -0.0000007316 * Math.pow(x, 5) + 0.0001424157 * Math.pow(x, 4) - 0.0088061232 * Math.pow(x, 3) + 0.2730184420 * Math.pow(x, 2) - 1.2692979299 * x + 13.1641217855\r\n  );\r\nconst sc = (x) =>\r\n  Trunc(\r\n    -0.0000006815 * Math.pow(x, 5) + 0.0001257728 * Math.pow(x, 4) - 0.0073286198 * Math.pow(x, 3) + 0.2100526539 * Math.pow(x, 2) - 0.5937899697 * x + 8.4614696213\r\n  );\r\nconst rd = (x) =>\r\n  Trunc(\r\n    0.00000009 * Math.pow(x, 3) -\r\n    0.0002767 * Math.pow(x, 2) +\r\n    0.46647865 * x +\r\n    0.19667643\r\n  );\r\nconst vm = (x) =>\r\n  Trunc(\r\n    0.00000004 * Math.pow(x, 3) -\r\n    0.00011561 * Math.pow(x, 2) +\r\n    0.19487198 * x +\r\n    0.07024967\r\n  );\r\nconst c = (x) =>\r\n  Trunc(\r\n    0.00000006 * Math.pow(x, 3) -\r\n    0.00018527 * Math.pow(x, 2) +\r\n    0.3113969 * x +\r\n    0.1159055\r\n  );\r\nconst Overload = (x) => lvlConstraint(x, ol);\r\nconst Electrocharge = (x) => lvlConstraint(x, ec);\r\nconst Superconduct = (x) => lvlConstraint(x, sc);\r\nconst Swirl = (x) => lvlConstraint(x, swirl);\r\nconst Shattered = (x) => lvlConstraint(x, shattered);\r\n\r\nconst EMReactionDamage = (x) => rd(x);\r\nconst EMVaportizeMelt = (x) => vm(x);\r\nconst EMCrystalize = (x) => c(x);\r\nconst EMCalc = {\r\n  EQA: x => EMReactionDamage(x),\r\n  EQB: x => EMVaportizeMelt(x),\r\n  EQC: x => EMCrystalize(x),\r\n};\r\nexport { Overload, Electrocharge, Superconduct, Swirl, Shattered, EMCalc };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {\r\n    Overload,\r\n    Electrocharge,\r\n    Superconduct,\r\n    Swirl,\r\n    EMCalc,\r\n    Shattered,\r\n} from \"./utils/ReactionLevelDMG.js\";\r\nimport { NumberField } from \"./utils/NumberField.js\";\r\nimport { Trunc } from \"./utils/Trunc.js\";\r\nimport { effects } from \"./utils/Effects.js\";\r\nimport { DamageTypes, ReactionTypes } from \"./Names.js\";\r\nimport { updateSheetArray, arrayUpdater } from './utils/updaters.js'\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { selectStats } from \"../features/totalStats/totalStatsSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SelectionValueField, } from \"./utils/SelectionValueField.js\";\r\n\r\nconst TalentName = \"TalentName\";\r\nconst DamageTypeStr = \"DamageType\";\r\nconst ReactionMultipliers = \"ReactionMultipliers\"\r\nconst TalentMultiplierStr = \"DamageValue\";\r\nconst monsterLevelStr = \"monsterLevelStr\";\r\nconst monsterResStr = \"monsterResStr\";\r\nconst resReduction = \"resReduction\";\r\nconst defReduction = \"defReduction\";\r\n\r\nconst calcRes = (res, red) => res > red ? res - red : -(red - res) / 2;\r\nconst calcDef = (plvl, mlvl, dr) => (100 + plvl) / (((100 + mlvl) * (1 - dr / 100 || 0)) + (100 + plvl));\r\nconst calcDamage = (props, index) => {\r\n    const DamageType = props[DamageTypeStr][index];\r\n    const DamagePercent = props[TalentMultiplierStr][index];\r\n    if (DamageType === \"None\" || DamagePercent === 0) return [null, null]\r\n    const EQB = EMCalc.EQB(props.totalEM);\r\n    const { totalATK, totalCritDMG } = props;\r\n    const ReactionMultObj = {\r\n        \"None\": 1,\r\n        \"Pyro Vaporize/Cryo Melt\": Trunc(1.5 * (1 + EQB / 100)),\r\n        \"Hydro Vaporize/Pyro Melt\": Trunc(2 * (1 + EQB / 100)),\r\n    }\r\n    const ReactionMultiplier = ReactionMultObj[props[ReactionMultipliers || \"None\"][index]]\r\n    const sumEffects = (...effects) => {\r\n        var sum = 0;\r\n        for (var i in effects) {\r\n            sum += getVal(effects[i]);\r\n        }\r\n        return sum;\r\n    };\r\n    const getVal = (stat) => {\r\n        var val = props[stat] || 0;\r\n        return val;\r\n    };\r\n    const atkType = {\r\n        \"Phys. Normal\": 100 + sumEffects(effects.Normal, effects.Total, effects.phys),\r\n        \"Phys. Charge\": 100 + sumEffects(effects.Charge, effects.Total, effects.phys),\r\n        \"Ele. Normal\": 100 + sumEffects(effects.Normal, effects.Total, effects.ele),\r\n        \"Ele. Charge\": 100 + sumEffects(effects.Charge, effects.Total, effects.ele),\r\n        \"Ele. Skill\": 100 + sumEffects(effects.Skill, effects.Total, effects.ele),\r\n        \"Ele. Burst\": 100 + sumEffects(effects.Burst, effects.Total, effects.ele),\r\n    };\r\n    const monsterDefense = calcDef(props.LVL, Math.max(1, props[monsterLevelStr]), props[defReduction])\r\n    const monsterResistance = 1 - calcRes(props[monsterResStr], props[resReduction]) / 100;\r\n    const Damage = Math.floor(totalATK * (DamagePercent / 100) * (atkType[DamageType] / 100) * monsterResistance * monsterDefense * ReactionMultiplier)\r\n    const Crit = Math.floor(Damage * (1 + totalCritDMG / 100))\r\n    return [Damage, Crit]\r\n}\r\nconst calcReaction = (props, index) => {\r\n    const EQA = EMCalc.EQA(props.totalEM);\r\n    const charLevel = props.LVL;\r\n    const atkType = {\r\n        \"Swirl\": Trunc(Swirl(charLevel) * (1 + EQA / 100 + (props[effects.Swirl] || 0) / 100)),\r\n        \"Shattered\": Trunc(Shattered(charLevel) * (1 + EQA / 100 + (props[effects.Shattered] || 0) / 100)),\r\n        \"Overload\": Trunc(Overload(charLevel) * (1 + EQA / 100 + (props[effects.Overload] || 0) / 100)),\r\n        \"Electrocharge\": Trunc(Electrocharge(charLevel) * (1 + EQA / 100 + (props[effects.Eletrocharge] || 0) / 100)),\r\n        \"Superconduct\": Trunc(Superconduct(charLevel) * (1 + EQA / 100 + (props[effects.Superconduct] || 0) / 100)),\r\n    }\r\n    const reaction = props[DamageTypeStr][index];\r\n    const monsterResistance = 1 - calcRes(props[monsterResStr], props[resReduction]) / 100;\r\n    return Math.floor(atkType[reaction] * monsterResistance)\r\n}\r\nconst DamageCalcField = ({ id, index, remove }) => {\r\n    const dispatch = useDispatch();\r\n    const updateType = updateSheetArray(dispatch);\r\n    const updateValue = updateSheetArray(dispatch);\r\n    const SetTypeValue = [DamageTypeStr, TalentMultiplierStr];\r\n    const props = { ...useSelector(selectSheet), ...useSelector(selectStats) }\r\n    const onPassiveValueChange = arrayUpdater(SetTypeValue, updateValue, props);\r\n    const onPassiveTypeChange = arrayUpdater(SetTypeValue, updateType, props);\r\n    var Normal, Critical = undefined;\r\n    if (DamageTypes.includes(props[DamageTypeStr][index]))\r\n        [Normal, Critical] = calcDamage(props, index)\r\n    else if (ReactionTypes.includes(props[DamageTypeStr][index]))\r\n        Normal = calcReaction(props, index);\r\n    return (\r\n        <tr key={id}>\r\n            <td className=\"table__td\" >\r\n                {DamageTypes.includes(props[DamageTypeStr][index]) ?\r\n                    <input\r\n                        type={\"text\"}\r\n                        defaultValue={props[TalentName][index]}\r\n                        onBlur={(e) => onPassiveValueChange(TalentName, index)(e.target.value)}\r\n                    ></input>\r\n                    : <></>}\r\n            </td>\r\n            <td className=\"table__td\" >\r\n                <SelectionValueField\r\n                    array={DamageTypes.concat(ReactionTypes)}\r\n                    onChange={onPassiveTypeChange(DamageTypeStr, index)}\r\n                    defaultValue={props[DamageTypeStr][index]}\r\n                />\r\n            </td>\r\n            <td className=\"table__td\" >\r\n                {DamageTypes.includes(props[DamageTypeStr][index]) ?\r\n                    <NumberField\r\n                        onChange={onPassiveValueChange(TalentMultiplierStr, index)}\r\n                        defaultValue={props[TalentMultiplierStr][index]}\r\n                    /> : <></>}\r\n            </td>\r\n            <td className=\"table__td\" >\r\n                {DamageTypes.includes(props[DamageTypeStr][index]) ?\r\n\r\n                    <SelectionValueField\r\n                        array={[\"None\", \"Pyro Vaporize/Cryo Melt\", \"Hydro Vaporize/Pyro Melt\"]}\r\n                        onChange={onPassiveTypeChange(ReactionMultipliers, index)}\r\n                        defaultValue={props[ReactionMultipliers][index]}\r\n                    /> : <></>}\r\n\r\n            </td>\r\n            <td className=\"table__td\" >\r\n                {Normal ? Normal.toLocaleString() : ''}\r\n            </td>\r\n            <td className=\"table__td\" >\r\n                {Critical ? Critical.toLocaleString() : ''}\r\n            </td>\r\n            <td className=\"table__td\" >\r\n                {remove(index)}\r\n            </td>\r\n        </tr>\r\n    );\r\n};\r\nexport { DamageCalcField, calcDamage, calcRes, calcDef }","import React from \"react\";\r\n\r\nimport { NumberField } from \"./utils/NumberField.js\";\r\nimport { MultiField, multifieldAdd, multifieldRemove } from \"./utils/MultiField.js\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateSheetArray,\r\n  sheetUpdater,\r\n  updateSheetValue,\r\n} from \"./utils/updaters.js\";\r\nimport { selectStats } from \"../features/totalStats/totalStatsSlice.js\";\r\nimport { DamageCalcField, calcDef, calcRes } from \"./DamageCalcField.js\";\r\nimport \"../css/DamageField.css\";\r\nimport { Trunc } from \"./utils/Trunc.js\";\r\n\r\nconst TalentName = \"TalentName\";\r\nconst DamageTypeStr = \"DamageType\";\r\nconst TalentMultiplierStr = \"DamageValue\";\r\nconst ReactionMultipliers = \"ReactionMultipliers\";\r\nconst monsterLevelStr = \"monsterLevelStr\";\r\nconst monsterResStr = \"monsterResStr\";\r\nconst resReduction = \"resReduction\";\r\nconst defReduction = \"defReduction\";\r\nconst DamageField = () => {\r\n  const props = { ...useSelector(selectSheet), ...useSelector(selectStats) };\r\n  const dispatch = useDispatch();\r\n  const updateSheet = updateSheetValue(dispatch);\r\n  const updateType = updateSheetArray(dispatch);\r\n  const updateValue = updateSheetArray(dispatch);\r\n  const SetTypeValue = [DamageTypeStr, TalentMultiplierStr];\r\n  const SetTypeLength = props[DamageTypeStr] ? props[DamageTypeStr].length : 0;\r\n  const changeDamageType = sheetUpdater(SetTypeValue, updateValue, props);\r\n  const changeDamageValue = sheetUpdater(SetTypeValue, updateType, props);\r\n\r\n  const multifieldFields = [\r\n    [changeDamageValue, TalentName],\r\n    [changeDamageType, DamageTypeStr, \"None\"],\r\n    [changeDamageValue, TalentMultiplierStr],\r\n    [changeDamageValue, ReactionMultipliers, \"None\"]\r\n  ];\r\n\r\n  const TableComponent = (tableProps) => {\r\n    return (\r\n      <table className=\"table__table\">\r\n        <thead>\r\n          <tr>\r\n            {[\r\n              \"Talent\",\r\n              \"Type\",\r\n              \"Damage Multiplier\",\r\n              \"Reaction Multiplier\",\r\n              \"Normal Hit\",\r\n              \"Critical Hit\",\r\n            ].map((rowName, index) => (\r\n              <th className=\"table__th\" key={index}>\r\n                {rowName}\r\n              </th>\r\n            ))}\r\n            <th> {tableProps.add()} </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableProps.array.map((id, index) => {\r\n            return DamageCalcField({ id, index, remove: tableProps.remove });\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n  const requiredFields = {\r\n    \"Player Level\": props.LVL,\r\n    \"Monster Level\": props[monsterLevelStr],\r\n    \"Monster Resistance\": props[monsterResStr],\r\n  };\r\n  const missingArray = Object.keys(requiredFields).filter(\r\n    (key) => undefined===requiredFields[key]\r\n  );\r\n  const totRes = calcRes(props[monsterResStr], props[resReduction]);\r\n  const totDef = calcDef(\r\n    props.LVL,\r\n    Math.max(1, props[monsterLevelStr]),\r\n    props[defReduction]\r\n  );\r\n  const mobDefInputFields = [monsterLevelStr,\r\n    monsterResStr,\r\n    resReduction,\r\n    defReduction].map((key, index) => {\r\n      return (\r\n        <td key={index} className=\"table__td\">\r\n          <NumberField\r\n            onChange={updateSheet(key)}\r\n            defaultValue={props[key]}\r\n          />\r\n        </td>\r\n      )\r\n    })\r\n  return (\r\n    <div>\r\n      <table className=\"table__table\">\r\n        <thead>\r\n          <tr>\r\n            {\r\n              [\r\n                'Monster Lvl',\r\n                'Monster Res(%)',\r\n                'Res Reduction(%)',\r\n                'Def Reduction(%)',\r\n                'Total Res',\r\n                'Monster Defense'\r\n              ].map((key, index) => {\r\n                return (\r\n                  <th key={index} className=\"table__th\">\r\n                    {key}\r\n                  </th>\r\n                )\r\n              })\r\n            }\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            {mobDefInputFields}\r\n            <td className=\"table__td\">\r\n              {totRes}%\r\n            </td>\r\n            <td className=\"table__td\">\r\n              {Trunc((1 - totDef) * 100)}%\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n\r\n      {missingArray.length > 0 ? (\r\n        <div> Missing : {`${missingArray.join()}`} </div>\r\n      ) : (\r\n          <></>\r\n        )}\r\n      <MultiField\r\n        initialLength={SetTypeLength}\r\n        addEffect={multifieldAdd(props, multifieldFields)}\r\n        removeEffect={multifieldRemove(props, multifieldFields)}\r\n      >\r\n        <TableComponent />\r\n      </MultiField>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DamageField;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst characters = \"@allCharacters\"\r\nconst initialState = () => {\r\n  const data = localStorage.getItem(characters);\r\n  if (data === null) {\r\n    const newData = { names: ['Traveler'], UID: [uuidv4()] }\r\n    localStorage.setItem(characters, JSON.stringify(newData))\r\n    return newData;\r\n  }\r\n  try {\r\n    return JSON.parse(data);\r\n  } catch (e) {\r\n    console.log(\"Could not read from localstorage\");\r\n  }\r\n};\r\n\r\nexport const characterSlice = createSlice({\r\n  name: \"characters\",\r\n  initialState: initialState(),\r\n  reducers: {\r\n    addNewCharacter: (state, { payload }) => {\r\n      var { names, UID } = state;\r\n      names.push(payload.name || \"New Character\")\r\n      UID.push(uuidv4())\r\n      state.names = names;\r\n      state.UID = UID;\r\n      localStorage.setItem(characters, JSON.stringify({ names: names, UID: UID }))\r\n    },\r\n    renameCharacter: (state, { payload }) => {\r\n      state.names[payload.index] = payload.name;\r\n      localStorage.setItem(characters, JSON.stringify({ names: state.names, UID: state.UID }))\r\n    },\r\n    deleteCharacter: (state, { payload }) => {\r\n      var newState = Array.from(state.names);\r\n      newState.splice(payload.index, 1);\r\n      state.names = newState;\r\n      localStorage.setItem(characters, JSON.stringify({ names: state.names, UID: state.UID }))\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addNewCharacter,\r\n  renameCharacter,\r\n  deleteCharacter,\r\n} = characterSlice.actions;\r\nexport const selectCharacters = (state) => state.characters;\r\nexport default characterSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport WeaponField from \"./WeaponField.js\";\r\nimport CharacterField from \"./CharacterField.js\";\r\nimport BuffsField from \"./BuffsField.js\";\r\nimport ArtifactsView from \"./ArtifactsView.js\";\r\nimport { Button } from \"./utils/Button.js\";\r\nimport DamageCalc from \"./DamageField.js\";\r\nimport \"../css/SheetView.css\";\r\nimport { selectSheet, updateSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { calcStats } from \"../features/totalStats/totalStatsSlice.js\";\r\nimport { renameCharacter } from \"../features/sheet/charactersSlice.js\";\r\n\r\nconst StatsView = \"Stats\";\r\nconst DamageView = \"Damage Calc\";\r\nconst ExportView = \"Export\";\r\n\r\nconst StatsViewRender = () => (\r\n  <>\r\n    <div className=\"section__mainBody--row\">\r\n      <CharacterField />\r\n      <WeaponField />\r\n      <ArtifactsView />\r\n    </div>\r\n    <BuffsField />\r\n  </>\r\n);\r\n// const BuffViewRender = () => ;\r\nconst DamageFieldNameRender = () => <DamageCalc />;\r\nconst Export = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const dispatch = useDispatch();\r\n  const [textInput, setText] = useState(\"\");\r\n  return (\r\n    <>\r\n      <textarea\r\n        key={props.currentSheet}\r\n        className=\"body__textarea\"\r\n        onChange={(e) => {\r\n          setText(e.target.value);\r\n        }}\r\n        defaultValue={textInput}\r\n      />\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            try {\r\n              const input = JSON.parse(textInput);\r\n              input.currentSheet = props.currentSheet;\r\n              input.view = StatsView;\r\n              dispatch(updateSheet(input));\r\n              dispatch(calcStats(input));\r\n            } catch (e) {\r\n              console.log(e);\r\n            }\r\n          }}\r\n        >\r\n          Import\r\n        </Button>\r\n      </div>\r\n      <div>\r\n        <Button\r\n          onClick={() => {\r\n            props.currentSheet = undefined;\r\n            props.view = undefined;\r\n            props.index = undefined;\r\n            setText(JSON.stringify(props));\r\n          }}\r\n        >\r\n          Export\r\n        </Button>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\nconst SheetView = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const dispatch = useDispatch();\r\n  const setView = (dispatch, view) => {\r\n    dispatch(updateSheet({ view: view }));\r\n  };\r\n  const currentView = props.view || StatsView;\r\n  var obj = {\r\n    [StatsView]: StatsViewRender(),\r\n    [DamageView]: DamageFieldNameRender(),\r\n    [ExportView]: Export(),\r\n  };\r\n  return (\r\n    <div key={props.currentSheet} className=\"section__mainBody\">\r\n      <div className=\"section__mainBody\">\r\n        {Object.keys(obj).map((view) =>\r\n          currentView.localeCompare(view) === 0 ? (\r\n            <div key={view}>\r\n              <div>\r\n                <input\r\n                  type={\"text\"}\r\n                  defaultValue={props.currentSheet}\r\n                  onBlur={(e) => {\r\n                    dispatch(\r\n                      renameCharacter({\r\n                        index: props.index,\r\n                        name: e.target.value,\r\n                      })\r\n                    );\r\n                    dispatch(updateSheet({ currentSheet: e.target.value }));\r\n                  }}\r\n                ></input>\r\n                {Object.keys(obj).map((view) => (\r\n                  <Button\r\n                    disabled={props.view === view}\r\n                    key={view}\r\n                    onClick={() => setView(dispatch, view)}\r\n                  >\r\n                    {view}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n              {obj[view]}\r\n            </div>\r\n          ) : (\r\n            <div key={view}></div>\r\n          )\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SheetView;\r\n","import React, { useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\nimport TotalStats from \"./TotalStats.js\";\r\nimport { Button } from \"./utils/Button.js\";\r\nimport CharacterView from \"./SheetView.js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loadSheet, selectSheet } from \"../features/sheet/sheetSlice\";\r\nimport {\r\n  addNewCharacter,\r\n  selectCharacters,\r\n} from \"../features/sheet/charactersSlice\";\r\nimport { loadPage } from \"./utils/LoadPage.js\";\r\nimport { calcStats } from \"../features/totalStats/totalStatsSlice\";\r\n\r\nconst Sheet = () => {\r\n  const dispatch = useDispatch();\r\n  const sheet = useSelector(selectSheet);\r\n  const characters = useSelector(selectCharacters);\r\n  const savePage = () => {\r\n    if (sheet.index !== undefined) {\r\n      localStorage.setItem(characters.UID[sheet.index], JSON.stringify(sheet));\r\n    }\r\n  };\r\n  window.addEventListener(\"unload\", savePage);\r\n  useEffect(() => {\r\n    changePage(dispatch, 0);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const changePage = (dispatch, index) => {\r\n    savePage();\r\n    const state = loadPage(characters.UID[index]);\r\n    state.currentSheet = characters.names[index];\r\n    state.index = index;\r\n    dispatch(loadSheet(state));\r\n    dispatch(calcStats(state));\r\n  };\r\n  return (\r\n    <div className=\"section__App--row\">\r\n      <div className=\"section__navbar\">\r\n        <div className=\"section__App--column\">\r\n          {characters.names.map((key, index) => {\r\n            return (\r\n              <Button\r\n                style={{ width: \"-webkit-fill-available\" }}\r\n                key={characters.UID[index]}\r\n                disabled={sheet.index === key}\r\n                onClick={() => changePage(dispatch, index)}\r\n              >\r\n                {key}\r\n              </Button>\r\n            );\r\n          })}\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(addNewCharacter({}));\r\n            }}\r\n          >\r\n            Add Sheet\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {sheet.currentSheet ? (\r\n        <div className=\"section__mainBody section__App--row\">\r\n          <CharacterView />\r\n          <TotalStats />\r\n        </div>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sheet;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Sheet from './js/Sheet.js';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Sheet/>\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport sheetReducer from \"../features/sheet/sheetSlice\";\r\nimport charactersReducer from \"../features/sheet/charactersSlice\";\r\nimport totalStatsReducer from \"../features/totalStats/totalStatsSlice\";\r\nexport default configureStore({\r\n  reducer: {\r\n    characters: charactersReducer,\r\n    sheet: sheetReducer,\r\n    stats: totalStatsReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}