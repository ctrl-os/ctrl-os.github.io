{"version":3,"sources":["js/utils/Effects.js","features/totalStats/totalStatsSlice.js","js/TotalStats.js","js/utils/Button.js","js/utils/SelectionValueField.js","js/utils/NumberField.js","js/utils/initialValues.js","js/Names.js","js/utils/LoadPage.js","features/sheet/sheetSlice.js","js/utils/updaters.js","js/utils/MultiField.js","js/WeaponField.js","js/CharacterField.js","js/utils/Checkbox.js","js/BuffInputField.js","js/BuffsField.js","js/ArtifactField.js","js/SetEffectField.js","js/ArtifactsView.js","js/utils/Trunc.js","js/utils/ReactionLevelDMG.js","js/DamageCalcField.js","js/DamageField.js","features/sheet/charactersSlice.js","js/SheetView.js","js/SheetStore.js","js/Sheet.js","App.js","app/store.js","serviceWorker.js","index.js"],"names":["effects","phys","ele","em","cr","cd","er","ATK","ART_ATK","ART_HP","ART_DEF","HP","DEF","PATK","PDEF","PHP","healb","Normal","Charge","Skill","Burst","Total","ATKSPD","CDR","MVSPD","LVL","Swirl","Overload","Eletrocharge","Superconduct","Shattered","Melt","Vaporize","Crystalize","None","longestArtifactName","generalSubs","artifactMain","flowerMain","plumeMain","sandsMain","concat","gobletMain","circletMain","weaponSub","characterAscensionStat","characterStats","weaponPassives","setEffectSubs","setEffects","artifactSub","buffsList","Array","from","Set","calcTotals","state","calcStat","stat","getVal","totalHP","totalATK","totalDEF","totalCrit","Math","min","totalEM","totalCritDMG","totalATKSPD","totalRecharge","totalStatsSlice","createSlice","name","initialState","reducers","calcDelta","action","payload","oldType","oldValue","newType","newValue","newTotals","key","calcStats","stats","props","increment","source","value","sumStats","Char","ascensionStatType","ascensionStatValue","fill","forEach","_","artifactIndex","aTypes","aVals","artifactType","artifactValue","index","length","weaponSubstatType","weaponSubstatValue","weaponPassivesType","weaponPassivesValue","BuffType","BuffValue","BuffToggle","getStats","actions","selectStats","TotalStats","useSelector","totalAtkPercent","critDmgPercent","sumEffects","sum","i","atkType","tableData","floor","toFixed","className","Object","keys","map","rowName","atkName","Button","tabIndex","SelectionValueField","onChange","array","component","defaultValue","e","target","arrayName","hidden","hideIfFalsyOrNone","val","undefined","localeCompare","NumberField","type","onBlur","parseFloat","minValue","max","maxValue","isNaN","NumberFieldOnLine","initialArtifactField","obj","initialField","TalentName","DamageType","ReactionMultipliers","DamageValue","monsterLevelStr","monsterResStr","resReduction","defReduction","BuffName","WeaponFieldName","avaliableFields","DamageTypes","ReactionTypes","savePage","uid","data","localStorage","setItem","loadPage","page","localStoreData","getItem","JSON","parse","currentSheet","field","console","log","initialFields","view","sheetSlice","updateSheet","loadSheet","newState","selectSheet","sheet","updateSheetAndStatsValue","dispatch","sheetKey","shouldUpdate","delta","isArray","updateSheetValue","updateSheetAndStatsType","updateSheetArray","arrayUpdater","Names","updater","passives","sheetUpdater","multifieldAdd","add","mutator","args","multifieldRemove","remove","splice","MultiField","AddEffect","ids","fieldIDArray","push","counter","setState","addEffect","RemoveEffect","removeEffect","ComponentRenderer","id","Component","wrapperClass","onClick","render","children","React","cloneElement","buttonText","title","initialLength","TableComponent","tableProps","style","overflowY","WeaponPassiveInput","useDispatch","updateType","updateValue","weaponPassiveTypeValue","onPassiveValueChange","onPassiveTypeChange","weaponPassiveInputComponent","selectionName","WeaponField","weaponPassiveLength","changePassiveType","changePassiveValue","multifieldFields","weaponSubstatInputComponent","CharacterField","ascStatType","ascStatValue","ascStat","updateAscType","updateAscValue","Checkbox","defaultChecked","BuffInputField","updateName","updateToggle","toggleSheetAndStatsValue","BuffTypeValue","onNameChange","onTypeChange","onValueChange","onToggleChange","BuffsField","buffEffectLength","ArtifactField","artifactTypesString","ArtifactNum","artifactValuesString","artifactTypeValue","updateArtifactType","updateArtifactValue","artifactMainStatInputComponent","mainStats","hideable","subStatIndex","artifactSubFieldInputComponent","artifactSubField","artifactSetEffectType","artifactSetEffectValue","SetEffectField","artifactSetEffectLength","artifactSetEffectTypeValue","border","PassiveInputComponent","artifactSetEffectInputComponent","views","setEffect","options","ArtifactsView","useState","setView","renderOnView","selectionButton","elem","disabled","ButtonIndex","childProps","Trunc","trunc","lvlConstraint","x","out","ol","pow","shattered","ec","swirl","sc","Electrocharge","EMReactionDamage","rd","EMVaportizeMelt","vm","EMCalc","DamageTypeStr","TalentMultiplierStr","calcRes","res","red","calcDef","plvl","mlvl","dr","DamageCalcField","SetTypeValue","Critical","includes","DamagePercent","EQB","ReactionMultiplier","monsterDefense","monsterResistance","Damage","calcDamage","EQA","charLevel","reaction","calcReaction","toLocaleString","DamageField","SetTypeLength","changeDamageType","changeDamageValue","requiredFields","missingArray","filter","totRes","totDef","mobDefProps","mobDefInputFields","join","characters","characterSlice","newData","names","UID","uuidv4","stringify","addNewCharacter","renameCharacter","deleteCharacter","newNames","newUID","selectCharacters","StatsView","SheetView","currentView","textInput","setText","deleteText","updateDelete","display","input","removeItem","Export","SheetStore","beforeUnload","componentDidMount","window","addEventListener","bind","componentWillUnmount","removeEventListener","Sheet","useEffect","changePage","width","App","configureStore","reducer","charactersReducer","sheetReducer","totalStatsReducer","Boolean","location","hostname","match","ReactDOM","StrictMode","store","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.142a4f43.chunk.js","sourcesContent":["const effects = {\r\n  phys: \"Phys. DMG (%)\",\r\n  ele: \"Elemental DMG (%)\",\r\n  em: \"Elemental Mastery\",\r\n  cr: \"Crit Rate (%)\",\r\n  cd: \"Crit DMG (%)\",\r\n  er: \"Energy Recharge (%)\",\r\n  ATK: \"ATK\",\r\n  ART_ATK: \"+ATK\",\r\n  ART_HP: \"+HP\",\r\n  ART_DEF: \"+DEF\",\r\n  HP: \"HP\",\r\n  DEF: \"DEF\",\r\n  PATK: \"%ATK\",\r\n  PDEF: \"%DEF\",\r\n  PHP: \"%HP\",\r\n  healb: \"Healing Bonus (%)\",\r\n  Normal: \"Normal Attack (%)\",\r\n  Charge: \"Charge Attack (%)\",\r\n  Skill: \"Ele. Skill DMG (%)\",\r\n  Burst: \"Ele. Burst D.MG (%)\",\r\n  Total: \"Total DMG (%)\",\r\n  ATKSPD: \"Attack Speed (%)\",\r\n  CDR: \"Cool Down (%)\",\r\n  MVSPD: \"Movement Speed (%)\",\r\n  LVL: \"LVL\",\r\n  Swirl: \"Swirl DMG (%)\",\r\n  Overload: \"Overload DMG (%)\",\r\n  Eletrocharge: \"Eletrocharge DMG (%)\",\r\n  Superconduct: \"Superconduct DMG (%)\",\r\n  Shattered: \"Shattered DMG (%)\",\r\n  Melt: \"Melt DMG (%)\",\r\n  Vaporize: \"Vaporize DMG (%)\",\r\n  Crystalize: \"Crystalize DMG (%)\",\r\n  None: \"None\",\r\n};\r\nconst longestArtifactName = effects.er;\r\nconst generalSubs = [\r\n  effects.cr,\r\n  effects.cd,\r\n  effects.er,\r\n  effects.em,\r\n  effects.PATK,\r\n  effects.PDEF,\r\n  effects.PHP,\r\n];\r\nconst artifactMain = [effects.em, effects.PATK, effects.PHP, effects.PDEF];\r\nconst flowerMain = [effects.ART_HP];\r\nconst plumeMain = [effects.ART_ATK];\r\nconst sandsMain = [effects.er].concat(artifactMain);\r\nconst gobletMain = [effects.ele, effects.phys].concat(artifactMain);\r\nconst circletMain = [effects.cr, effects.cd, effects.healb].concat(artifactMain);\r\nconst weaponSub = [effects.None, effects.phys].concat(generalSubs);\r\nconst characterAscensionStat = [effects.None].concat(generalSubs);\r\nconst characterStats = [effects.LVL, effects.HP, effects.ATK, effects.DEF];\r\nconst weaponPassives = [\r\n  effects.None,\r\n  effects.ele,\r\n  effects.phys,\r\n  effects.Skill,\r\n  effects.Burst,\r\n  effects.Normal,\r\n  effects.Charge,\r\n  effects.Total,\r\n  effects.MVSPD,\r\n  effects.ATKSPD,\r\n].concat(generalSubs);\r\nconst setEffectSubs = [\r\n  effects.Swirl,\r\n  effects.Overload,\r\n  effects.Eletrocharge,\r\n  effects.Superconduct,\r\n  effects.Melt,\r\n  effects.Vaporize,\r\n]\r\nconst setEffects = [].concat(weaponPassives).concat(setEffectSubs);\r\nconst artifactSub = [\r\n  effects.None,\r\n  effects.ART_HP,\r\n  effects.ART_ATK,\r\n  effects.ART_DEF,\r\n].concat(generalSubs);\r\nconst buffsList = Array.from(new Set([\"None\"].concat(artifactSub).concat(weaponPassives)))\r\n\r\nexport {\r\n  effects,\r\n  setEffects,\r\n  weaponSub,\r\n  longestArtifactName,\r\n  characterAscensionStat,\r\n  characterStats,\r\n  weaponPassives,\r\n  artifactSub,\r\n  flowerMain,\r\n  plumeMain,\r\n  sandsMain,\r\n  gobletMain,\r\n  circletMain,\r\n  buffsList,\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\nimport { effects } from \"../../js/utils/Effects.js\";\n\nvar getStats = (props) => {\n    const increment = (source, value) =>\n        source ? source + (value || 0) : value || 0;\n    const sumStats = {};\n\n    const { LVL, HP, DEF, ATK } = props;\n    const Char = { LVL, HP, DEF, ATK };\n    const { ascensionStatType, ascensionStatValue } = props;\n    for (var key in Char) {\n        sumStats[key] = increment(sumStats[key], Char[key]);\n    }\n    sumStats[ascensionStatType] = increment(\n        sumStats[ascensionStatType],\n        ascensionStatValue\n    );\n    Array(6)\n        .fill(0)\n        .forEach((_, artifactIndex) => {\n            const aTypes = `artifactTypes-${artifactIndex}`;\n            const aVals = `artifactValues-${artifactIndex}`;\n            const artifactType = props[aTypes];\n            const artifactValue = props[aVals];\n            for (var index = 0; artifactType && index < artifactType.length; index++) {\n                sumStats[artifactType[index]] = increment(\n                    sumStats[artifactType[index]],\n                    artifactValue[index]\n                );\n            }\n        });\n    sumStats[props.weaponSubstatType] = increment(\n        sumStats[props.weaponSubstatType],\n        props.weaponSubstatValue\n    );\n    const { weaponPassivesType, weaponPassivesValue } = props;\n    for (var index = 0; weaponPassivesType && index < weaponPassivesType.length; index++) {\n        sumStats[weaponPassivesType[index]] = increment(\n            sumStats[weaponPassivesType[index]],\n            weaponPassivesValue[index]\n        );\n    }\n    const { BuffType, BuffValue, BuffToggle } = props;\n    for (index = 0; BuffType && index < BuffType.length; index++) {\n        if (BuffToggle[index]) {\n            sumStats[BuffType[index]] = increment(\n                sumStats[BuffType[index]],\n                BuffValue[index]\n            );\n        }\n    }\n    return calcTotals(sumStats);\n};\nconst calcTotals = (state) => {\n    const calcStat = (stat) => {\n        const base = getVal(stat) || 0;\n        const percent = getVal(\"%\" + stat) / 100;\n        const flat = getVal(\"+\" + stat) || 0;\n        return base * (1 + percent) + flat;\n    };\n    const getVal = (stat) => {\n        return state[stat] || 0;\n    };\n    state.totalHP = calcStat(effects.HP);\n    state.totalATK = calcStat(effects.ATK);\n    state.totalDEF = calcStat(effects.DEF);\n    state.totalCrit = Math.min(100, 5 + getVal(effects.cr));\n    state.totalEM = getVal(effects.em);\n    state.totalCritDMG = 50 + getVal(effects.cd);\n    state.totalATKSPD = 100 + getVal(effects.ATKSPD);\n    state.totalRecharge = 100 + getVal(effects.er);\n    return state;\n};\n\nexport const totalStatsSlice = createSlice({\n    name: 'stats',\n    initialState: {},\n    reducers: {\n        calcDelta: (state, action) => {\n            const { oldType, oldValue, newType, newValue } = action.payload\n            if (oldType)\n                state[oldType] = (state[oldType] || 0) - (oldValue || 0);\n            state[newType] = (state[newType] || 0) + (newValue || 0);\n            const newTotals = calcTotals(state)\n            for (var key in newTotals)\n                state[key] = newTotals[key]\n        },\n        calcStats: (state, action) => {\n            const stats = getStats(action.payload)\n            for (var key in stats) {\n                state[key] = stats[key];\n            }\n        }\n    },\n});\n\nexport const { calcDelta, calcStats } = totalStatsSlice.actions;\nexport const selectStats = state => state.stats;\nexport default totalStatsSlice.reducer;\n","import React from \"react\";\r\nimport { effects } from \"./utils/Effects.js\";\r\nimport \"../css/TotalStats.css\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectStats } from \"../features/totalStats/totalStatsSlice.js\";\r\nimport \"../css/TotalStats.css\";\r\nconst TotalStats = () => {\r\n  const props = useSelector(selectStats);\r\n  const {\r\n    totalHP = 0,\r\n    totalATK = 0,\r\n    totalDEF = 0,\r\n    totalCrit = 0,\r\n    totalCritDMG = 0,\r\n    totalATKSPD = 0,\r\n    totalRecharge = 0,\r\n    totalEM = 0,\r\n  } = props;\r\n\r\n  const getVal = (stat) => {\r\n    const val = props[stat] || 0;\r\n    return val;\r\n  };\r\n  const totalAtkPercent = ((totalATK / (getVal(effects.ATK) || 1)));\r\n  const critDmgPercent =\r\n    ((totalCrit / 100) * ((1 / (totalCrit / 100) - 1) + (1 + totalCritDMG / 100)))\r\n\r\n\r\n  const sumEffects = (...effects) => {\r\n    var sum = 0;\r\n    for (const i in effects) {\r\n      sum += getVal(effects[i]);\r\n    }\r\n    return sum;\r\n  };\r\n  const normalAttackPercent =\r\n    100 + sumEffects(effects.Normal, effects.Total, effects.phys);\r\n  const chargeAttackPercent =\r\n    100 + sumEffects(effects.Charge, effects.Total, effects.phys);\r\n  const eleNormal =\r\n    100 + sumEffects(effects.Normal, effects.Total, effects.ele);\r\n  const eleCharge =\r\n    100 + sumEffects(effects.Charge, effects.Total, effects.ele);\r\n  const Skill = 100 + sumEffects(effects.Skill, effects.Total, effects.phys);\r\n  const Burst = 100 + sumEffects(effects.Burst, effects.Total, effects.phys);\r\n\r\n  const atkType = {\r\n    \"P. Normal\": normalAttackPercent,\r\n    \"P. Charge\": chargeAttackPercent,\r\n    \"E. Normal\": eleNormal,\r\n    \"E. Charge\": eleCharge,\r\n    \"E. Skill\": Skill,\r\n    \"E. Burst\": Burst,\r\n  };\r\n  const tableData = {\r\n    \"Total HP\": Math.floor(totalHP),\r\n    \"Total ATK\": Math.floor(totalATK),\r\n    \"Total DEF\": Math.floor(totalDEF),\r\n    \"Elemental Mastery\": totalEM,\r\n    \"Critical Rate\": `${totalCrit.toFixed(2)}%`,\r\n    \"Critical Damage\": `${totalCritDMG.toFixed(2)}%`,\r\n    \"Attack Speed\": `${totalATKSPD.toFixed(2)}% `,\r\n    \"Energy Recharge\": `${totalRecharge.toFixed(2)}% `,\r\n    \"\": null,\r\n    \"Multipliers\": null,\r\n    \"ATK Multiplier\": `${totalAtkPercent.toFixed(3)}x`,\r\n    \"CRIT Multiplier\": `${critDmgPercent.toFixed(3)}x`,\r\n  }\r\n  return (\r\n    <>\r\n      <table className=\"table__table\">\r\n        <tbody>\r\n          {Object.keys(tableData).map((rowName, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td className=\"table__td\">{rowName}</td>\r\n                <td className=\"table__td\">{tableData[rowName]}</td>\r\n              </tr>\r\n            );\r\n          })}\r\n\r\n          <tr>\r\n            <th className=\"table__th\">Attack Type</th>\r\n            <th className=\"table__th\">Multiplier</th>\r\n          </tr>\r\n          {Object.keys(atkType).map((atkName) => (\r\n            <tr key={atkName}>\r\n              <td className=\"table__td\">{atkName}</td>\r\n              <td className=\"table__td\">{atkType[atkName] / 100}x</td>\r\n            </tr>\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default TotalStats;\r\n","import React from \"react\";\r\nvar Button = (props) => {\r\n  return <button tabIndex={-1} {...props} />;\r\n};\r\n\r\nexport { Button };\r\n","import React, { Fragment } from \"react\";\r\nimport { longestArtifactName } from \"./Effects.js\";\r\nimport \"./SelectionValueField.css\"\r\nvar SelectionValueField = (props) => {\r\n  var { onChange, array, component, defaultValue } = props;\r\n  return (\r\n    <span>\r\n      <select\r\n        className={props.className || \"element__selectField--default\"}\r\n        tabIndex={-1}\r\n        defaultValue={defaultValue}\r\n        onChange={(e) => onChange(e.target.value, true)}\r\n      >\r\n        {array.map((arrayName) => {\r\n          return (\r\n            <option key={arrayName} value={arrayName}>\r\n              {arrayName}\r\n            </option>\r\n          );\r\n        })}\r\n        <option hidden>{longestArtifactName}</option>\r\n        {/* Just to keep selection field lengths consistent. */}\r\n      </select>\r\n      {component}\r\n    </span>\r\n  );\r\n};\r\n\r\nvar hideIfFalsyOrNone = (val, component) => {\r\n  return val === undefined || val === null || val.localeCompare(\"None\") === 0 ? (\r\n    <Fragment />\r\n  ) : (\r\n      component\r\n    );\r\n};\r\n\r\nexport { SelectionValueField, hideIfFalsyOrNone };\r\n","import React from \"react\";\r\nimport \"./NumberField.css\";\r\nvar NumberField = (props) => {\r\n  return (\r\n    <input\r\n      className={props.className || \"item__fillWidth\"}\r\n      type=\"number\"\r\n      key={props.defaultValue}\r\n      defaultValue={props.defaultValue === undefined ? '' : props.defaultValue}\r\n      onBlur={(e) => {\r\n        var value = parseFloat(e.target.value);\r\n        if (props.minValue) value = Math.max(value, props.minValue)\r\n        if (props.maxValue) value = Math.min(value, props.maxValue)\r\n        e.target.value = value;\r\n        props.onChange(isNaN(value) ? null : value);\r\n      }}\r\n    />\r\n  );\r\n};\r\n\r\nvar NumberFieldOnLine = (props) => (\r\n  <>\r\n    {props.name} <NumberField {...props} />\r\n  </>\r\n);\r\n\r\nexport { NumberField, NumberFieldOnLine };\r\n","import { effects } from \"./Effects.js\";\r\nconst initialDamageField = {\r\n  TalentName: [],\r\n  DamageType: [],\r\n  ReactionMultipliers: [],\r\n  DamageValue: [],\r\n  monsterLevelStr: 0,\r\n  monsterResStr: 0,\r\n  resReduction: 0,\r\n  defReduction: 0,\r\n};\r\nconst initialBuffsField = {\r\n  BuffName: [],\r\n  BuffType: [],\r\n  BuffValue: [],\r\n  BuffToggle: [],\r\n}\r\nconst initialCharacterField = {\r\n  ascensionStatType: \"None\",\r\n  ascensionStatValue: 0,\r\n  HP: '',\r\n  LVL: '',\r\n  ATK: '',\r\n  DEF: '',\r\n};\r\nconst initialArtifactField = (() => {\r\n  var obj = {};\r\n  Array(5)\r\n    .fill(0)\r\n    .forEach((_, index) => {\r\n      obj[`artifactTypes-${index}`] = Array(5).fill(null);\r\n      obj[`artifactValues-${index}`] = Array(5).fill(0);\r\n    });\r\n  obj[`artifactTypes-0`][0] = effects.ART_HP;\r\n  obj[`artifactTypes-1`][0] = effects.ART_ATK;\r\n  obj[`artifactTypes-2`][0] = effects.er;\r\n  obj[`artifactTypes-3`][0] = effects.ele;\r\n  obj[`artifactTypes-4`][0] = effects.cr;\r\n  obj[`artifactTypes-5`] = [];\r\n  obj[`artifactValues-5`] = [];\r\n  return obj;\r\n})();\r\nconst initialWeaponField = {\r\n  weaponSubstatType: \"None\",\r\n  weaponPassivesType: [],\r\n  weaponPassivesValue: [],\r\n};\r\n\r\nconst initialField = {\r\n  ...initialWeaponField,\r\n  ...initialDamageField,\r\n  ...initialCharacterField,\r\n  ...initialArtifactField,\r\n  ...initialBuffsField,\r\n};\r\nexport default initialField;\r\n","const WeaponFieldName = \"WeaponField\";\r\nconst ArtifactFieldName = \"ArtifactField\";\r\nconst CharacterFieldName = \"CharacterField\";\r\nconst DamageFieldName = \"DamageField\";\r\nconst avaliableFields = [\r\n  WeaponFieldName,\r\n  ArtifactFieldName,\r\n  CharacterFieldName,\r\n  DamageFieldName,\r\n];\r\nconst DamageTypes = [\r\n  \"None\",\r\n  \"Phys. Normal\",\r\n  \"Phys. Charge\",\r\n  \"Ele. Normal\",\r\n  \"Ele. Charge\",\r\n  \"Ele. Skill\",\r\n  \"Ele. Burst\",\r\n]\r\nconst ReactionTypes = [\"Swirl\", \"Overload\", \"Electrocharge\", \"Superconduct\", \"Shattered\"]\r\nexport {\r\n  WeaponFieldName,\r\n  ArtifactFieldName,\r\n  CharacterFieldName,\r\n  DamageFieldName,\r\n  avaliableFields,\r\n  DamageTypes,\r\n  ReactionTypes\r\n};\r\n","import { WeaponFieldName, avaliableFields } from \"../Names.js\";\r\n\r\nexport const savePage = (uid, data) => {\r\n  if (uid !== undefined) {\r\n    localStorage.setItem(uid, data);\r\n  }\r\n};\r\nexport const loadPage = (page) => {\r\n  const localStoreData = localStorage.getItem(page);\r\n  try {\r\n    const data = localStoreData ? JSON.parse(localStoreData) : {};\r\n    var state = { currentSheet: page };\r\n    if (data[WeaponFieldName]) {\r\n      avaliableFields.forEach((field) => {\r\n        var val = data[field] !== \"undefined\" ? JSON.parse(data[field]) : {};\r\n        state = data[field] ? { ...state, ...val } : {};\r\n      });\r\n    } else state = { ...data };\r\n    return state;\r\n  } catch (e) {\r\n    console.log(e);\r\n  }\r\n};\r\n","import { createSlice } from '@reduxjs/toolkit';\nimport initialFields from \"../../../src/js/utils/initialValues.js\";\nimport { loadPage } from '../../../src/js/utils/LoadPage.js';\nconst initialState = {\n    ...initialFields,\n    currentSheet: 'null',\n    view: '',\n}\nexport const sheetSlice = createSlice({\n    name: 'sheet',\n    initialState: { ...initialState, ...loadPage('CharacterSheet1') },\n    reducers: {\n        updateSheet: (state, action) => {\n            for (var key in action.payload)\n                state[key] = action.payload[key];\n        },\n        loadSheet: (state, action) => {\n            const newState = { ...initialState, ...action.payload }\n            for (var key in newState)\n                state[key] = newState[key];\n        }\n    },\n});\n\nexport const { updateSheet, loadSheet } = sheetSlice.actions;\nexport const selectSheet = state => state.sheet;\nexport default sheetSlice.reducer;\n","import { updateSheet } from \"../../features/sheet/sheetSlice.js\";\r\nimport { calcDelta } from \"../../features/totalStats/totalStatsSlice.js\";\r\n\r\nconst updateSheetAndStatsValue = (dispatch) => (oldType, oldValue, sheetKey, index = 0, shouldUpdate = true) => (value) => {\r\n    var delta = { oldType: oldType, oldValue: oldValue };\r\n    if (Array.isArray(value)) {\r\n        delta.newType = oldType;\r\n        delta.newValue = value[index];\r\n    }\r\n    else {\r\n        delta.newType = oldType;\r\n        delta.newValue = value;\r\n    }\r\n\r\n    if (!Array.isArray(oldType) && shouldUpdate) dispatch(calcDelta(delta))\r\n    updateSheetValue(dispatch)(sheetKey)(value)\r\n}\r\nconst updateSheetAndStatsType = (dispatch) => (oldType, oldValue, sheetKey, index = 0, shouldUpdate = true) => (value) => {\r\n    var delta = { oldType: oldType, oldValue: oldValue };\r\n    if (Array.isArray(value)) {\r\n        delta.newType = value[index];\r\n        delta.newValue = oldValue;\r\n    }\r\n    else {\r\n        delta.newType = value;\r\n        delta.newValue = oldValue;\r\n    }\r\n    if (!Array.isArray(oldType) && shouldUpdate) dispatch(calcDelta(delta))\r\n    updateSheetValue(dispatch)(sheetKey)(value)\r\n}\r\nconst toggleSheetAndStatsValue = (dispatch) => (oldType, oldValue, sheetKey, index = 0) => (value) => {\r\n    var delta = { oldType: oldType };\r\n    if (Array.isArray(value)) {\r\n        delta.oldValue = oldValue * (!value[index])\r\n        delta.newType = oldType;\r\n        delta.newValue = oldValue * value[index];\r\n    }\r\n    else {\r\n        delta.oldValue = oldValue * (!value[index])\r\n        delta.newType = oldType;\r\n        delta.newValue = oldValue * value;\r\n    }\r\n    if (!Array.isArray(oldType)) dispatch(calcDelta(delta))\r\n    updateSheetValue(dispatch)(sheetKey)(value)\r\n}\r\nconst updateSheetValue = (dispatch) => (key) => (value) => {\r\n    dispatch(updateSheet({ [key]: value }))\r\n}\r\nconst updateSheetArray = (dispatch) => (oldType, oldValue, sheetKey, index = 0) => (value) => {\r\n    dispatch(updateSheet({ [sheetKey]: value }))\r\n}\r\nconst arrayUpdater = (Names, updater, props) => (key, index, shouldUpdate) => (value) => {\r\n    var passives = [...props[key]];\r\n    passives[index] = value;\r\n    updater(...Names.map((name) => props[name][index]), key, index, shouldUpdate)(passives)\r\n}\r\nconst sheetUpdater = (Names, updater, props) => key => value => {\r\n    updater(...Names.map((name) => props[name]), key)(value)\r\n}\r\n\r\nexport { updateSheetAndStatsValue, updateSheetAndStatsType, toggleSheetAndStatsValue, arrayUpdater, sheetUpdater, updateSheetValue, updateSheetArray }","import React from \"react\";\r\n\r\nimport { Button } from \"./Button.js\";\r\nimport \"../../css/MultiField.css\";\r\n\r\n/**\r\n * props: initialLength, title, buttonText, addEffect, removeEffect\r\n */\r\n\r\nconst multifieldAdd = (props, array) => () => {\r\n  const add = (mutator, name, value = undefined) => {\r\n    const updater = mutator(name);\r\n    updater(props[name].concat(value));\r\n  };\r\n  array.forEach((args) => {\r\n    add(...args);\r\n  });\r\n};\r\nconst multifieldRemove = (props, array) => (index) => {\r\n  const remove = (mutator, name, value, sheetUpdater = () => () => {}) => {\r\n    const updater = mutator(name);\r\n    var newState = [...props[name]];\r\n    newState.splice(index, 1);\r\n    sheetUpdater(name, index)(0);\r\n    updater(newState);\r\n  };\r\n  array.forEach((args) => {\r\n    remove(...args);\r\n  });\r\n};\r\n\r\nclass MultiField extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    var initialLength = this.props.initialLength || 0;\r\n    var fieldIDArray;\r\n    fieldIDArray = Array(initialLength)\r\n      .fill(0)\r\n      .map((_, index) => index);\r\n    this.state = {\r\n      fieldIDArray: fieldIDArray,\r\n      counter: fieldIDArray.length,\r\n    };\r\n  }\r\n\r\n  AddEffect = () => {\r\n    var ids = this.state.fieldIDArray;\r\n    ids.push(this.state.counter);\r\n    this.setState({\r\n      fieldIDArray: ids,\r\n      counter: this.state.counter + 1,\r\n    });\r\n    this.props.addEffect();\r\n  };\r\n\r\n  RemoveEffect = (index) => {\r\n    var ids = this.state.fieldIDArray;\r\n    ids.splice(index, 1);\r\n    this.setState({ fieldIDArray: ids });\r\n    this.props.removeEffect(index);\r\n  };\r\n\r\n  ComponentRenderer = (id, index, Component) => (\r\n    <div key={id}>\r\n      <div\r\n        className={this.props.wrapperClass || \"section__MultiField--spacing\"}\r\n      >\r\n        <Component id={id} index={index} />\r\n        <Button onClick={() => this.RemoveEffect(index)}>Remove</Button>\r\n      </div>\r\n    </div>\r\n  );\r\n  render = () => {\r\n    return (\r\n      <>\r\n        {this.props.children ? (\r\n          React.cloneElement(this.props.children, {\r\n            key: this.state.fieldIDArray.length,\r\n            className:\r\n              this.state.fieldIDArray.length > 3\r\n                ? \"section__MultiField--scrollView\"\r\n                : \"section__MultiField\",\r\n            array: this.state.fieldIDArray,\r\n            remove: (index) => (\r\n              <Button onClick={() => this.RemoveEffect(index)}>Remove</Button>\r\n            ),\r\n            add: () => (\r\n              <Button onClick={() => this.AddEffect()}>\r\n                {this.props.buttonText || \"Add\"}\r\n              </Button>\r\n            ),\r\n          })\r\n        ) : (\r\n          <div>\r\n            <div>\r\n              {this.props.title || \"\"}\r\n              <Button onClick={() => this.AddEffect()}>\r\n                {this.props.buttonText || \"Add\"}\r\n              </Button>\r\n            </div>\r\n            <div\r\n              key={this.state.fieldIDArray.length}\r\n              className={\r\n                this.state.fieldIDArray.length > 3\r\n                  ? \"section__MultiField--scrollView\"\r\n                  : \"section__MultiField\"\r\n              }\r\n            >\r\n              {this.state.fieldIDArray\r\n                ? this.state.fieldIDArray.map((id, index) => {\r\n                    return this.ComponentRenderer(\r\n                      id,\r\n                      index,\r\n                      this.props.component\r\n                    );\r\n                  })\r\n                : null}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n}\r\n\r\nexport { MultiField, multifieldAdd, multifieldRemove };\r\n","import React from \"react\";\r\nimport { weaponSub, weaponPassives } from \"./utils/Effects.js\";\r\nimport \"../css/WeaponField.css\";\r\nimport {\r\n  SelectionValueField,\r\n  hideIfFalsyOrNone,\r\n} from \"./utils/SelectionValueField.js\";\r\nimport { NumberField, NumberFieldOnLine } from \"./utils/NumberField.js\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  updateSheetAndStatsValue,\r\n  arrayUpdater,\r\n  sheetUpdater,\r\n} from \"./utils/updaters.js\";\r\nimport {\r\n  MultiField,\r\n  multifieldAdd,\r\n  multifieldRemove,\r\n} from \"./utils/MultiField.js\";\r\n\r\nconst weaponPassivesType = \"weaponPassivesType\";\r\nconst weaponPassivesValue = \"weaponPassivesValue\";\r\nconst weaponSubstatType = \"weaponSubstatType\";\r\nconst weaponSubstatValue = \"weaponSubstatValue\";\r\n\r\nconst WeaponField = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const dispatch = useDispatch();\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n  const weaponPassiveTypeValue = [weaponPassivesType, weaponPassivesValue];\r\n  const weaponPassiveLength = props.weaponPassivesType\r\n    ? props.weaponPassivesType.length\r\n    : 0;\r\n  const onPassiveValueChange = arrayUpdater(\r\n    weaponPassiveTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n\r\n  const changePassiveType = sheetUpdater(\r\n    weaponPassiveTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n  const changePassiveValue = sheetUpdater(\r\n    weaponPassiveTypeValue,\r\n    updateType,\r\n    props\r\n  );\r\n  const multifieldFields = [\r\n    [changePassiveType, weaponPassivesType],\r\n    [changePassiveValue, weaponPassivesValue, 0, onPassiveValueChange],\r\n  ];\r\n  const weaponSubstatInputComponent = hideIfFalsyOrNone(\r\n    props[weaponSubstatType],\r\n    <NumberFieldOnLine\r\n      onChange={updateValue(\r\n        props[weaponSubstatType],\r\n        props[weaponSubstatValue],\r\n        weaponSubstatValue\r\n      )}\r\n      defaultValue={props[weaponSubstatValue]}\r\n    />\r\n  );\r\n  return (\r\n    <div>\r\n      Weapon Substat\r\n      <table className=\"table__table\">\r\n        <tbody className=\"table__td\">\r\n          <tr>\r\n            <td>\r\n              <SelectionValueField\r\n                array={weaponSub}\r\n                onChange={updateType(\r\n                  props[weaponSubstatType],\r\n                  props[weaponSubstatValue],\r\n                  weaponSubstatType\r\n                )}\r\n                defaultValue={props[weaponSubstatType]}\r\n              />\r\n            </td>\r\n            <td>{weaponSubstatInputComponent}</td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n      Weapon Skill\r\n      <MultiField\r\n        initialLength={weaponPassiveLength}\r\n        title=\"Weapon Passive\"\r\n        buttonText=\"Add Passive\"\r\n        component={WeaponPassiveInput}\r\n        addEffect={multifieldAdd(props, multifieldFields)}\r\n        removeEffect={multifieldRemove(props, multifieldFields)}\r\n      >\r\n        <TableComponent />\r\n      </MultiField>\r\n    </div>\r\n  );\r\n};\r\nconst TableComponent = (tableProps) => {\r\n  return (\r\n    <div  style={{ overflowY: \"scroll\", \"maxHeight\": \"178px\", 'border': '1px solid white' }}>\r\n      <table className=\"table__table\">\r\n        <thead>\r\n          <tr>\r\n            {[\"Type\", \"Value\"].map((rowName, index) => (\r\n              <th className=\"table__th\" key={index}>\r\n                {rowName}\r\n              </th>\r\n            ))}\r\n            <th> {tableProps.add()} </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableProps.array.map((id, index) => {\r\n            return WeaponPassiveInput({ id, index, remove: tableProps.remove });\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst WeaponPassiveInput = ({ id, index, remove }) => {\r\n  const dispatch = useDispatch();\r\n  const props = useSelector(selectSheet);\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n  const weaponPassiveTypeValue = [weaponPassivesType, weaponPassivesValue];\r\n  const onPassiveValueChange = arrayUpdater(\r\n    weaponPassiveTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n  const onPassiveTypeChange = arrayUpdater(\r\n    weaponPassiveTypeValue,\r\n    updateType,\r\n    props\r\n  );\r\n  const weaponPassiveInputComponent = (\r\n    <>\r\n      {hideIfFalsyOrNone(\r\n        props[weaponPassivesType][index],\r\n        <NumberField\r\n          onChange={onPassiveValueChange(weaponPassivesValue, index)}\r\n          defaultValue={props[weaponPassivesValue][index]}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n  return (\r\n    <tr key={id}>\r\n      <td>\r\n        <SelectionValueField\r\n          selectionName={weaponPassivesType}\r\n          onChange={onPassiveTypeChange(weaponPassivesType, index)}\r\n          array={weaponPassives}\r\n          defaultValue={props[weaponPassivesType][index]}\r\n        />\r\n      </td>\r\n      <td>{weaponPassiveInputComponent}</td>\r\n      <td>{remove(index)}</td>\r\n    </tr>\r\n  );\r\n};\r\n\r\nexport default WeaponField;\r\n","import React from \"react\";\r\nimport { characterAscensionStat, characterStats } from \"./utils/Effects.js\";\r\nimport {\r\n  SelectionValueField,\r\n  hideIfFalsyOrNone,\r\n} from \"./utils/SelectionValueField.js\";\r\nimport { NumberField } from \"./utils/NumberField.js\";\r\nimport \"../css/CharacterField.css\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  updateSheetAndStatsValue,\r\n  sheetUpdater,\r\n} from \"./utils/updaters.js\";\r\n\r\nconst CharacterField = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const dispatch = useDispatch();\r\n  const ascensionStatType = \"ascensionStatType\";\r\n  const ascensionStatValue = \"ascensionStatValue\";\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n  const ascStat = [ascensionStatType, ascensionStatValue];\r\n  const updateAscType = sheetUpdater(ascStat, updateType, props);\r\n  const updateAscValue = sheetUpdater(ascStat, updateValue, props);\r\n  const ascensionStatInputComponent = (ascStatType, ascStatValue) =>\r\n    hideIfFalsyOrNone(\r\n      ascStatType,\r\n      <>\r\n        <tr>\r\n          <td className={\" characterField__inputUpper\"}>\r\n            <div></div>\r\n            <NumberField\r\n              className={\"item__fillWidth\"}\r\n              defaultValue={ascStatValue}\r\n              onChange={updateAscValue(ascensionStatValue)}\r\n            />\r\n          </td>\r\n        </tr>\r\n      </>\r\n    );\r\n  return (\r\n    <div>\r\n      <div> Base Stats </div>\r\n      <table className=\"table__table item__fillWidth\">\r\n        <tbody>\r\n          {characterStats.map((name, index) => {\r\n            return (\r\n              <tr key={index}>\r\n                <td className=\"table__td\">{name}</td>\r\n                <td className={\"table__td\"}>\r\n                  <NumberField\r\n                    name={name}\r\n                    className={\"item__fillWidth\"}\r\n                    minValue={1}\r\n                    defaultValue={props[name]}\r\n                    onChange={updateValue(name, props[name], name)}\r\n                  />\r\n                </td>\r\n              </tr>\r\n            );\r\n          })}\r\n        </tbody>\r\n      </table>\r\n      <table className=\"table__table item__fillWidth\">\r\n        <tbody className=\"table__td\">\r\n          <tr>\r\n            <td>Ascension Stat</td>\r\n          </tr>\r\n          <tr >\r\n            <td>\r\n              <SelectionValueField\r\n                array={characterAscensionStat}\r\n                onChange={updateAscType(ascensionStatType)}\r\n                defaultValue={props[ascensionStatType]}\r\n              />\r\n            </td>\r\n          </tr>\r\n          {ascensionStatInputComponent(\r\n            props[ascensionStatType],\r\n            props[ascensionStatValue]\r\n          )}\r\n        </tbody>\r\n      </table>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CharacterField;\r\n","var Checkbox = (props) => {\n    return (\n        <input\n            type=\"checkbox\"\n            key={props.key}\n            defaultChecked={props.defaultValue}\n            onClick={(e) => {\n                props.onChange(!props.defaultValue);\n            }}\n        />\n    );\n};\n\nexport { Checkbox };","import { NumberField } from \"./utils/NumberField.js\";\r\nimport { buffsList } from \"./utils/Effects.js\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  toggleSheetAndStatsValue,\r\n  updateSheetAndStatsValue,\r\n  updateSheetArray,\r\n  arrayUpdater,\r\n} from \"./utils/updaters.js\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { selectStats } from \"../features/totalStats/totalStatsSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { SelectionValueField } from \"./utils/SelectionValueField.js\";\r\nimport { Checkbox } from \"./utils/Checkbox.js\";\r\n\r\nconst BuffName = \"BuffName\";\r\nconst BuffType = \"BuffType\";\r\nconst BuffValue = \"BuffValue\";\r\nconst BuffToggle = \"BuffToggle\";\r\n\r\nconst BuffInputField = ({ id, index, remove }) => {\r\n  const dispatch = useDispatch();\r\n  const updateName = updateSheetArray(dispatch);\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n  const updateToggle = toggleSheetAndStatsValue(dispatch);\r\n  const BuffTypeValue = [BuffType, BuffValue];\r\n  const props = { ...useSelector(selectSheet), ...useSelector(selectStats) };\r\n  const onNameChange = arrayUpdater(BuffTypeValue, updateName, props);\r\n  const onTypeChange = arrayUpdater(BuffTypeValue, updateType, props);\r\n  const onValueChange = arrayUpdater(BuffTypeValue, updateValue, props);\r\n  const onToggleChange = arrayUpdater(BuffTypeValue, updateToggle, props);\r\n  return (\r\n    <tr key={id}>\r\n      <td className=\"table__td Name\">\r\n        <input\r\n          type={\"text\"}\r\n          defaultValue={props[BuffName][index]}\r\n          onBlur={(e) => onNameChange(BuffName, index)(e.target.value)}\r\n        ></input>\r\n      </td>\r\n      <td className=\"table__td Type\">\r\n        <SelectionValueField\r\n          array={buffsList}\r\n          onChange={onTypeChange(BuffType, index, props[BuffToggle][index])}\r\n          defaultValue={props[BuffType][index]}\r\n        />\r\n      </td>\r\n      <td className=\"table__td Value\">\r\n        <NumberField\r\n          onChange={onValueChange(BuffValue, index, props[BuffToggle][index])}\r\n          defaultValue={props[BuffValue][index]}\r\n        />\r\n      </td>\r\n\r\n      <td className=\"table__td Toggle\">\r\n        <Checkbox\r\n          onChange={onToggleChange(BuffToggle, index)}\r\n          defaultValue={props[BuffToggle][index]}\r\n        />\r\n      </td>\r\n\r\n      <td className=\"table__td\">{remove(index)}</td>\r\n    </tr>\r\n  );\r\n};\r\nexport default BuffInputField;\r\n","import React from \"react\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  updateSheetAndStatsValue,\r\n  arrayUpdater,\r\n  sheetUpdater,\r\n} from \"./utils/updaters.js\";\r\nimport {\r\n  MultiField,\r\n  multifieldAdd,\r\n  multifieldRemove,\r\n} from \"./utils/MultiField.js\";\r\nimport \"../css/SetEffectField.css\";\r\nimport BuffInputField from \"./BuffInputField.js\";\r\n\r\nconst BuffName = \"BuffName\";\r\nconst BuffType = \"BuffType\";\r\nconst BuffValue = \"BuffValue\";\r\nconst BuffToggle = \"BuffToggle\";\r\nconst BuffTypeValue = [BuffType, BuffValue];\r\nconst BuffsField = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const dispatch = useDispatch();\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n\r\n  const buffEffectLength = props[BuffType] ? props[BuffType].length : 0;\r\n  const onPassiveValueChange = arrayUpdater(BuffTypeValue, updateValue, props);\r\n  const changePassiveType = sheetUpdater(BuffTypeValue, updateValue, props);\r\n  const changePassiveValue = sheetUpdater(BuffTypeValue, updateType, props);\r\n  const multifieldFields = [\r\n    [changePassiveValue, BuffName],\r\n    [changePassiveType, BuffType],\r\n    [changePassiveValue, BuffValue, 0, onPassiveValueChange],\r\n    [changePassiveValue, BuffToggle, true],\r\n  ];\r\n  return (\r\n    <div>\r\n      Buffs\r\n      <div>\r\n        <MultiField\r\n          initialLength={buffEffectLength}\r\n          buttonText=\"Add Buff\"\r\n          addEffect={multifieldAdd(props, multifieldFields)}\r\n          removeEffect={multifieldRemove(props, multifieldFields)}\r\n        >\r\n          <TableComponent />\r\n        </MultiField>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst TableComponent = (tableProps) => {\r\n  return (\r\n    <table className=\"table__table\">\r\n      <thead>\r\n        <tr>\r\n          {[\"Buff Name\", \"Buff\", \"Buff Amount\", \"Active?\"].map(\r\n            (rowName, index) => (\r\n              <th className=\"table__th\" key={index}>\r\n                {rowName}\r\n              </th>\r\n            )\r\n          )}\r\n          <th> {tableProps.add()} </th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {tableProps.array.map((id, index) => {\r\n          return BuffInputField({ id, index, remove: tableProps.remove });\r\n        })}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default BuffsField;\r\n","import React from \"react\";\r\nimport { artifactSub } from \"./utils/Effects.js\";\r\nimport \"../css/ArtifactField.css\";\r\nimport {\r\n  SelectionValueField,\r\n  hideIfFalsyOrNone,\r\n} from \"./utils/SelectionValueField.js\";\r\nimport { NumberField } from \"./utils/NumberField.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  updateSheetAndStatsValue,\r\n  arrayUpdater,\r\n} from \"./utils/updaters.js\";\r\n\r\nconst ArtifactField = (props) => {\r\n  props = { ...useSelector(selectSheet), ...props };\r\n  const dispatch = useDispatch();\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n  const artifactTypesString = `artifactTypes-${props.ArtifactNum}`;\r\n  const artifactValuesString = `artifactValues-${props.ArtifactNum}`;\r\n  const artifactTypeValue = [artifactTypesString, artifactValuesString];\r\n  const updateArtifactType = arrayUpdater(artifactTypeValue, updateType, props);\r\n  const updateArtifactValue = arrayUpdater(\r\n    artifactTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n  const artifactSubField = (subStatIndex) => {\r\n    const artifactSubFieldInputComponent = hideIfFalsyOrNone(\r\n      props[artifactTypesString][subStatIndex],\r\n      <NumberField\r\n        name={\"Value\"}\r\n        onChange={updateArtifactValue(artifactValuesString, subStatIndex)}\r\n        defaultValue={props[artifactValuesString][subStatIndex]}\r\n      />\r\n    );\r\n    return (\r\n      <tr key={subStatIndex}>\r\n        <td className=\"table__td\">Line #{subStatIndex}</td>\r\n        <td className=\"table__td\">\r\n          <SelectionValueField\r\n            key={subStatIndex}\r\n            array={artifactSub}\r\n            onChange={updateArtifactType(artifactTypesString, subStatIndex)}\r\n            defaultValue={props[artifactTypesString][subStatIndex]}\r\n          />\r\n        </td>\r\n        <td className=\"table__td\">{artifactSubFieldInputComponent}</td>\r\n      </tr>\r\n    );\r\n  };\r\n  const artifactMainStatInputComponent = (\r\n    <NumberField\r\n      name={\"Value\"}\r\n      onChange={updateArtifactValue(artifactValuesString, 0)}\r\n      defaultValue={props[artifactValuesString][0]}\r\n    />\r\n  );\r\n  return (\r\n    <table className=\"table__table\">\r\n      <tbody>\r\n        <tr>\r\n          <td className=\"table__td\">Main Stat</td>\r\n          <td className=\"table__td\">\r\n            <SelectionValueField\r\n              array={props.mainStats}\r\n              onChange={updateArtifactType(artifactTypesString, 0)}\r\n              defaultValue={props[artifactTypesString][0]}\r\n              hideable={false}\r\n            />\r\n          </td>\r\n          <td className=\"table__td\">{artifactMainStatInputComponent}</td>\r\n        </tr>\r\n        {Array(4)\r\n          .fill(0)\r\n          .map((_, index) => artifactSubField(index + 1))}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default ArtifactField;\r\n","import React from \"react\";\r\nimport { setEffects } from \"./utils/Effects.js\";\r\nimport {\r\n  SelectionValueField,\r\n  hideIfFalsyOrNone,\r\n} from \"./utils/SelectionValueField.js\";\r\nimport { NumberFieldOnLine } from \"./utils/NumberField.js\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateSheetAndStatsType,\r\n  updateSheetAndStatsValue,\r\n  arrayUpdater,\r\n  sheetUpdater,\r\n} from \"./utils/updaters.js\";\r\nimport {\r\n  MultiField,\r\n  multifieldAdd,\r\n  multifieldRemove,\r\n} from \"./utils/MultiField.js\";\r\nimport \"../css/SetEffectField.css\";\r\nconst artifactSetEffectType = \"artifactTypes-5\";\r\nconst artifactSetEffectValue = \"artifactValues-5\";\r\n\r\nconst SetEffectField = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const dispatch = useDispatch();\r\n  const updateType = updateSheetAndStatsType(dispatch);\r\n  const updateValue = updateSheetAndStatsValue(dispatch);\r\n\r\n  const artifactSetEffectLength = props[artifactSetEffectType]\r\n    ? props[artifactSetEffectType].length\r\n    : 0;\r\n  const artifactSetEffectTypeValue = [\r\n    artifactSetEffectType,\r\n    artifactSetEffectValue,\r\n  ];\r\n  const onPassiveValueChange = arrayUpdater(\r\n    artifactSetEffectTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n  const onPassiveTypeChange = arrayUpdater(\r\n    artifactSetEffectTypeValue,\r\n    updateType,\r\n    props\r\n  );\r\n  const artifactSetEffectInputComponent = ({ id, index, remove }) => {\r\n    const PassiveInputComponent = (\r\n      <>\r\n        {hideIfFalsyOrNone(\r\n          props[artifactSetEffectType][index],\r\n          <NumberFieldOnLine\r\n            onChange={onPassiveValueChange(artifactSetEffectValue, index)}\r\n            defaultValue={props[artifactSetEffectValue][index]}\r\n          />\r\n        )}\r\n      </>\r\n    );\r\n    return (\r\n      <tr key={id}>\r\n        <td>\r\n          <SelectionValueField\r\n            selectionName={artifactSetEffectType}\r\n            onChange={onPassiveTypeChange(artifactSetEffectType, index)}\r\n            array={setEffects}\r\n            defaultValue={props[artifactSetEffectType][index]}\r\n          />\r\n        </td>\r\n        <td>{PassiveInputComponent}</td>\r\n        <td>{remove(index)}</td>\r\n      </tr>\r\n    );\r\n  };\r\n  const changePassiveType = sheetUpdater(\r\n    artifactSetEffectTypeValue,\r\n    updateValue,\r\n    props\r\n  );\r\n  const changePassiveValue = sheetUpdater(\r\n    artifactSetEffectTypeValue,\r\n    updateType,\r\n    props\r\n  );\r\n  const multifieldFields = [\r\n    [changePassiveType, artifactSetEffectType],\r\n    [changePassiveValue, artifactSetEffectValue, 0, onPassiveValueChange],\r\n  ];\r\n  const TableComponent = (tableProps) => {\r\n    return (\r\n      <div\r\n        style={{\r\n          overflowY: \"scroll\",\r\n          \"maxHeight\": \"194px\",\r\n          border: \"1px solid white\",\r\n        }}\r\n      >\r\n        <table className=\"table__table\">\r\n          <thead>\r\n            <tr>\r\n              {[\"Type\", \"Value\"].map((rowName, index) => (\r\n                <th className=\"table__th\" key={index}>\r\n                  {rowName}\r\n                </th>\r\n              ))}\r\n              <th> {tableProps.add()} </th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableProps.array.map((id, index) => {\r\n              return artifactSetEffectInputComponent({\r\n                id,\r\n                index,\r\n                remove: tableProps.remove,\r\n              });\r\n            })}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <MultiField\r\n        initialLength={artifactSetEffectLength}\r\n        title=\"Passive Set Effects\"\r\n        buttonText=\"Add Passive\"\r\n        wrapperClass=\"setEffect--multifield\"\r\n        addEffect={multifieldAdd(props, multifieldFields)}\r\n        removeEffect={multifieldRemove(props, multifieldFields)}\r\n      >\r\n        <TableComponent />\r\n      </MultiField>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SetEffectField;\r\n","import React, { useState } from \"react\";\r\nimport ArtifactField from \"./ArtifactField.js\";\r\nimport SetEffectField from \"./SetEffectField.js\";\r\nimport \"../css/ArtifactView.css\";\r\nimport {\r\n  flowerMain,\r\n  plumeMain,\r\n  sandsMain,\r\n  gobletMain,\r\n  circletMain,\r\n} from \"./utils/Effects.js\";\r\nimport { Button } from \"./utils/Button.js\";\r\n\r\nconst views = [\r\n  \"Flower of Life\",\r\n  \"Plume of Death\",\r\n  \"Sands of Eon\",\r\n  \"Goblet of Eonotherm\",\r\n  \"Circlet of Logos\",\r\n];\r\nconst setEffect = \"Set Effect\";\r\nconst options = [flowerMain, plumeMain, sandsMain, gobletMain, circletMain];\r\n\r\nconst ArtifactsView = () => {\r\n  const [view, setView] = useState(views[0]);\r\n  const renderOnView = (name, component) => {\r\n    return view === name ? component : <div key={name} />;\r\n  };\r\n  const selectionButton = (elem) => {\r\n    return (\r\n      <Button\r\n        className=\"artifact__buttons\"\r\n        key={elem}\r\n        disabled={view === elem}\r\n        onClick={() => setView(elem)}\r\n      >\r\n        {elem}\r\n      </Button>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <span className=\"section__App--row\">\r\n          Artifacts\r\n          {options.map((_, ButtonIndex) => {\r\n            return selectionButton(views[ButtonIndex]);\r\n          })}\r\n          {selectionButton(setEffect)}\r\n        </span>\r\n        {options.map((_, ArtifactNum) => {\r\n          var childProps = {\r\n            ArtifactNum: ArtifactNum,\r\n            mainStats: options[ArtifactNum],\r\n          };\r\n          return renderOnView(\r\n            views[ArtifactNum],\r\n            <ArtifactField key={ArtifactNum} {...childProps} />\r\n          );\r\n        })}\r\n        {renderOnView(setEffect, <SetEffectField />)}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ArtifactsView;\r\n","var Trunc = (value) => Math.trunc(value ) ;\r\nexport { Trunc };\r\n","import { Trunc } from \"./Trunc.js\";\r\nconst lvlConstraint = (x, out) => (x > 0 && x < 91 ? out(x) : 0);\r\nconst ol = (x) =>\r\n  Trunc(\r\n    -0.0000029347 * Math.pow(x, 5) + 0.0005506720 * Math.pow(x, 4) - 0.0332158793 * Math.pow(x, 3) + 0.9775531392 * Math.pow(x, 2) - 4.2765576885 * x + 40.4647994435\r\n  );\r\nconst shattered = (x) =>\r\n  Trunc(\r\n    -0.0000022838 * Math.pow(x, 5) + 0.0004328837 * Math.pow(x, 4) - 0.0266303723 * Math.pow(x, 3) + 0.7971700160 * Math.pow(x, 2) - 4.1553061404 * x + 34.6845277878\r\n  );\r\nconst ec = (x) =>\r\n  Trunc(\r\n    -0.0000016456 * Math.pow(x, 5) + 0.0003056403 * Math.pow(x, 4) - 0.0180630927 * Math.pow(x, 3) + 0.5286068156 * Math.pow(x, 2) - 1.9083528517 * x + 23.1971984890\r\n  );\r\nconst swirl = (x) =>\r\n  Trunc(\r\n    -0.0000007316 * Math.pow(x, 5) + 0.0001424157 * Math.pow(x, 4) - 0.0088061232 * Math.pow(x, 3) + 0.2730184420 * Math.pow(x, 2) - 1.2692979299 * x + 13.1641217855\r\n  );\r\nconst sc = (x) =>\r\n  Trunc(\r\n    -0.0000006815 * Math.pow(x, 5) + 0.0001257728 * Math.pow(x, 4) - 0.0073286198 * Math.pow(x, 3) + 0.2100526539 * Math.pow(x, 2) - 0.5937899697 * x + 8.4614696213\r\n  );\r\nconst rd = (x) =>\r\n  Trunc(\r\n    0.00000009 * Math.pow(x, 3) -\r\n    0.0002767 * Math.pow(x, 2) +\r\n    0.46647865 * x +\r\n    0.19667643\r\n  );\r\nconst vm = (x) =>\r\n  Trunc(\r\n    0.00000004 * Math.pow(x, 3) -\r\n    0.00011561 * Math.pow(x, 2) +\r\n    0.19487198 * x +\r\n    0.07024967\r\n  );\r\nconst c = (x) =>\r\n  Trunc(\r\n    0.00000006 * Math.pow(x, 3) -\r\n    0.00018527 * Math.pow(x, 2) +\r\n    0.3113969 * x +\r\n    0.1159055\r\n  );\r\nconst Overload = (x) => lvlConstraint(x, ol);\r\nconst Electrocharge = (x) => lvlConstraint(x, ec);\r\nconst Superconduct = (x) => lvlConstraint(x, sc);\r\nconst Swirl = (x) => lvlConstraint(x, swirl);\r\nconst Shattered = (x) => lvlConstraint(x, shattered);\r\n\r\nconst EMReactionDamage = (x) => rd(x);\r\nconst EMVaportizeMelt = (x) => vm(x);\r\nconst EMCrystalize = (x) => c(x);\r\nconst EMCalc = {\r\n  EQA: x => EMReactionDamage(x),\r\n  EQB: x => EMVaportizeMelt(x),\r\n  EQC: x => EMCrystalize(x),\r\n};\r\nexport { Overload, Electrocharge, Superconduct, Swirl, Shattered, EMCalc };\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {\n    Overload,\n    Electrocharge,\n    Superconduct,\n    Swirl,\n    EMCalc,\n    Shattered,\n} from \"./utils/ReactionLevelDMG.js\";\nimport { NumberField } from \"./utils/NumberField.js\";\nimport { Trunc } from \"./utils/Trunc.js\";\nimport { effects } from \"./utils/Effects.js\";\nimport { DamageTypes, ReactionTypes } from \"./Names.js\";\nimport { updateSheetArray, arrayUpdater } from './utils/updaters.js'\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\nimport { selectStats } from \"../features/totalStats/totalStatsSlice.js\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { SelectionValueField, } from \"./utils/SelectionValueField.js\";\n\nconst TalentName = \"TalentName\";\nconst DamageTypeStr = \"DamageType\";\nconst ReactionMultipliers = \"ReactionMultipliers\"\nconst TalentMultiplierStr = \"DamageValue\";\nconst monsterLevelStr = \"monsterLevelStr\";\nconst monsterResStr = \"monsterResStr\";\nconst resReduction = \"resReduction\";\nconst defReduction = \"defReduction\";\n\nconst calcRes = (res, red) => res > red ? res - red : (-red) / 2 + (res < 0 ? res : 0);\nconst calcDef = (plvl, mlvl, dr) => (100 + plvl) / (((100 + mlvl) * (1 - dr / 100 || 0)) + (100 + plvl));\nconst calcDamage = (props, index) => {\n    const DamageType = props[DamageTypeStr][index];\n    const DamagePercent = props[TalentMultiplierStr][index];\n    if (DamageType === \"None\" || DamagePercent === 0) return [null, null]\n    const EQB = EMCalc.EQB(props.totalEM);\n    const { totalATK, totalCritDMG } = props;\n    const ReactionMultObj = {\n        \"None\": 1,\n        \"Pyro Vaporize/Cryo Melt\": Trunc(1.5 * (1 + EQB / 100)),\n        \"Hydro Vaporize/Pyro Melt\": Trunc(2 * (1 + EQB / 100)),\n    }\n    const ReactionMultiplier = ReactionMultObj[props[ReactionMultipliers || \"None\"][index]]\n    const sumEffects = (...effects) => {\n        var sum = 0;\n        for (var i in effects) {\n            sum += getVal(effects[i]);\n        }\n        return sum;\n    };\n    const getVal = (stat) => {\n        var val = props[stat] || 0;\n        return val;\n    };\n    const atkType = {\n        \"Phys. Normal\": 100 + sumEffects(effects.Normal, effects.Total, effects.phys),\n        \"Phys. Charge\": 100 + sumEffects(effects.Charge, effects.Total, effects.phys),\n        \"Ele. Normal\": 100 + sumEffects(effects.Normal, effects.Total, effects.ele),\n        \"Ele. Charge\": 100 + sumEffects(effects.Charge, effects.Total, effects.ele),\n        \"Ele. Skill\": 100 + sumEffects(effects.Skill, effects.Total, effects.ele),\n        \"Ele. Burst\": 100 + sumEffects(effects.Burst, effects.Total, effects.ele),\n    };\n    const monsterDefense = calcDef(props.LVL, Math.max(1, props[monsterLevelStr]), props[defReduction])\n    const monsterResistance = 1 - calcRes(props[monsterResStr], props[resReduction]) / 100;\n    const Damage = Math.floor(totalATK * (DamagePercent / 100) * (atkType[DamageType] / 100) * monsterResistance * monsterDefense * ReactionMultiplier)\n    const Crit = Math.floor(Damage * (1 + totalCritDMG / 100))\n    return [Damage, Crit]\n}\nconst calcReaction = (props, index) => {\n    const EQA = EMCalc.EQA(props.totalEM);\n    const charLevel = props.LVL;\n    const atkType = {\n        \"Swirl\": Trunc(Swirl(charLevel) * (1 + EQA / 100 + (props[effects.Swirl] || 0) / 100)),\n        \"Shattered\": Trunc(Shattered(charLevel) * (1 + EQA / 100 + (props[effects.Shattered] || 0) / 100)),\n        \"Overload\": Trunc(Overload(charLevel) * (1 + EQA / 100 + (props[effects.Overload] || 0) / 100)),\n        \"Electrocharge\": Trunc(Electrocharge(charLevel) * (1 + EQA / 100 + (props[effects.Eletrocharge] || 0) / 100)),\n        \"Superconduct\": Trunc(Superconduct(charLevel) * (1 + EQA / 100 + (props[effects.Superconduct] || 0) / 100)),\n    }\n    const reaction = props[DamageTypeStr][index];\n    const monsterResistance = 1 - calcRes(props[monsterResStr], props[resReduction]) / 100;\n    return Math.floor(atkType[reaction] * monsterResistance)\n}\nconst DamageCalcField = ({ id, index, remove }) => {\n    const dispatch = useDispatch();\n    const updateType = updateSheetArray(dispatch);\n    const updateValue = updateSheetArray(dispatch);\n    const SetTypeValue = [DamageTypeStr, TalentMultiplierStr];\n    const props = { ...useSelector(selectSheet), ...useSelector(selectStats) }\n    const onPassiveValueChange = arrayUpdater(SetTypeValue, updateValue, props);\n    const onPassiveTypeChange = arrayUpdater(SetTypeValue, updateType, props);\n    var Normal, Critical = undefined;\n    if (DamageTypes.includes(props[DamageTypeStr][index]))\n        [Normal, Critical] = calcDamage(props, index)\n    else if (ReactionTypes.includes(props[DamageTypeStr][index]))\n        Normal = calcReaction(props, index);\n    return (\n        <tr key={id}>\n            <td className=\"table__td\" >\n                {DamageTypes.includes(props[DamageTypeStr][index]) ?\n                    <input\n                        type={\"text\"}\n                        defaultValue={props[TalentName][index]}\n                        onBlur={(e) => onPassiveValueChange(TalentName, index)(e.target.value)}\n                    ></input>\n                    : <></>}\n            </td>\n            <td className=\"table__td\" >\n                <SelectionValueField\n                    array={DamageTypes.concat(ReactionTypes)}\n                    onChange={onPassiveTypeChange(DamageTypeStr, index)}\n                    defaultValue={props[DamageTypeStr][index]}\n                />\n            </td>\n            <td className=\"table__td\" >\n                {DamageTypes.includes(props[DamageTypeStr][index]) ?\n                    <NumberField\n                        onChange={onPassiveValueChange(TalentMultiplierStr, index)}\n                        defaultValue={props[TalentMultiplierStr][index]}\n                    /> : <></>}\n            </td>\n            <td className=\"table__td\" >\n                {DamageTypes.includes(props[DamageTypeStr][index]) ?\n\n                    <SelectionValueField\n                        array={[\"None\", \"Pyro Vaporize/Cryo Melt\", \"Hydro Vaporize/Pyro Melt\"]}\n                        onChange={onPassiveTypeChange(ReactionMultipliers, index)}\n                        defaultValue={props[ReactionMultipliers][index]}\n                    /> : <></>}\n\n            </td>\n            <td className=\"table__td\" >\n                {Normal ? Normal.toLocaleString() : ''}\n            </td>\n            <td className=\"table__td\" >\n                {Critical ? Critical.toLocaleString() : ''}\n            </td>\n            <td className=\"table__td\" >\n                {remove(index)}\n            </td>\n        </tr>\n    );\n};\nexport { DamageCalcField, calcDamage, calcRes, calcDef }","import React from \"react\";\r\n\r\nimport { NumberField } from \"./utils/NumberField.js\";\r\nimport { MultiField, multifieldAdd, multifieldRemove } from \"./utils/MultiField.js\";\r\nimport { selectSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  updateSheetArray,\r\n  sheetUpdater,\r\n  updateSheetValue,\r\n} from \"./utils/updaters.js\";\r\nimport { selectStats } from \"../features/totalStats/totalStatsSlice.js\";\r\nimport { DamageCalcField, calcDef, calcRes } from \"./DamageCalcField.js\";\r\nimport \"../css/DamageField.css\";\r\nimport { Trunc } from \"./utils/Trunc.js\";\r\n\r\nconst TalentName = \"TalentName\";\r\nconst DamageTypeStr = \"DamageType\";\r\nconst TalentMultiplierStr = \"DamageValue\";\r\nconst ReactionMultipliers = \"ReactionMultipliers\";\r\nconst monsterLevelStr = \"monsterLevelStr\";\r\nconst monsterResStr = \"monsterResStr\";\r\nconst resReduction = \"resReduction\";\r\nconst defReduction = \"defReduction\";\r\nconst DamageField = () => {\r\n  const props = { ...useSelector(selectSheet), ...useSelector(selectStats) };\r\n  const dispatch = useDispatch();\r\n  const updateSheet = updateSheetValue(dispatch);\r\n  const updateType = updateSheetArray(dispatch);\r\n  const updateValue = updateSheetArray(dispatch);\r\n  const SetTypeValue = [DamageTypeStr, TalentMultiplierStr];\r\n  const SetTypeLength = props[DamageTypeStr] ? props[DamageTypeStr].length : 0;\r\n  const changeDamageType = sheetUpdater(SetTypeValue, updateValue, props);\r\n  const changeDamageValue = sheetUpdater(SetTypeValue, updateType, props);\r\n\r\n  const multifieldFields = [\r\n    [changeDamageValue, TalentName],\r\n    [changeDamageType, DamageTypeStr, \"None\"],\r\n    [changeDamageValue, TalentMultiplierStr],\r\n    [changeDamageValue, ReactionMultipliers, \"None\"]\r\n  ];\r\n\r\n  const TableComponent = (tableProps) => {\r\n    return (\r\n      <table className=\"table__table\">\r\n        <thead>\r\n          <tr>\r\n            {[\r\n              \"Talent\",\r\n              \"Type\",\r\n              \"Damage Multiplier\",\r\n              \"Reaction Multiplier\",\r\n              \"Normal Hit\",\r\n              \"Critical Hit\",\r\n            ].map((rowName, index) => (\r\n              <th className=\"table__th\" key={index}>\r\n                {rowName}\r\n              </th>\r\n            ))}\r\n            <th> {tableProps.add()} </th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          {tableProps.array.map((id, index) => {\r\n            return DamageCalcField({ id, index, remove: tableProps.remove });\r\n          })}\r\n        </tbody>\r\n      </table>\r\n    );\r\n  };\r\n  const requiredFields = {\r\n    \"Player Level\": props.LVL,\r\n    \"Monster Level\": props[monsterLevelStr],\r\n    \"Monster Resistance\": props[monsterResStr],\r\n  };\r\n  const missingArray = Object.keys(requiredFields).filter(\r\n    (key) => undefined === requiredFields[key]\r\n  );\r\n  const totRes = calcRes(props[monsterResStr], props[resReduction]);\r\n  const totDef = calcDef(\r\n    props.LVL,\r\n    Math.max(1, props[monsterLevelStr]),\r\n    props[defReduction]\r\n  );\r\n  const mobDefProps = [{ minValue: 1 }, {}, {}, {}]\r\n  const mobDefInputFields = [monsterLevelStr,\r\n    monsterResStr,\r\n    resReduction,\r\n    defReduction].map((key, index) => {\r\n      return (\r\n        <td key={index} className=\"table__td\">\r\n          <NumberField\r\n            onChange={updateSheet(key)}\r\n            defaultValue={props[key]}\r\n            {...mobDefProps[index]}\r\n          />\r\n        </td>\r\n      )\r\n    })\r\n  return (\r\n    <div>\r\n      <table className=\"table__table\">\r\n        <thead>\r\n          <tr>\r\n            {\r\n              [\r\n                'Monster Lvl',\r\n                'Monster Res(%)',\r\n                'Res Reduction(%)',\r\n                'Def Reduction(%)',\r\n                'Total Res',\r\n                'Monster Defense'\r\n              ].map((key, index) => {\r\n                return (\r\n                  <th key={index} className=\"table__th\">\r\n                    {key}\r\n                  </th>\r\n                )\r\n              })\r\n            }\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n          <tr>\r\n            {mobDefInputFields}\r\n            <td className=\"table__td\">\r\n              {totRes}%\r\n            </td>\r\n            <td className=\"table__td\">\r\n              {Trunc((1 - totDef) * 100)}%\r\n            </td>\r\n          </tr>\r\n        </tbody>\r\n      </table>\r\n\r\n\r\n      {missingArray.length > 0 ? (\r\n        <div> Missing : {`${missingArray.join()}`} </div>\r\n      ) : (\r\n          <></>\r\n        )}\r\n      <MultiField\r\n        initialLength={SetTypeLength}\r\n        addEffect={multifieldAdd(props, multifieldFields)}\r\n        removeEffect={multifieldRemove(props, multifieldFields)}\r\n      >\r\n        <TableComponent />\r\n      </MultiField>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DamageField;\r\n","import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { v4 as uuidv4 } from 'uuid';\r\nconst characters = \"@allCharacters\"\r\nconst initialState = () => {\r\n  const data = localStorage.getItem(characters);\r\n  if (data === null) {\r\n    const newData = { names: ['Traveler'], UID: [uuidv4()] }\r\n    localStorage.setItem(characters, JSON.stringify(newData))\r\n    return newData;\r\n  }\r\n  try {\r\n    return JSON.parse(data);\r\n  } catch (e) {\r\n    console.log(\"Could not read from localstorage\");\r\n  }\r\n};\r\n\r\nexport const characterSlice = createSlice({\r\n  name: \"characters\",\r\n  initialState: initialState(),\r\n  reducers: {\r\n    addNewCharacter: (state, { payload }) => {\r\n      var { names, UID } = state;\r\n      names.push(payload.name || \"New Character\")\r\n      UID.push(uuidv4())\r\n      state.names = names;\r\n      state.UID = UID;\r\n      localStorage.setItem(characters, JSON.stringify({ names: names, UID: UID }))\r\n    },\r\n    renameCharacter: (state, { payload }) => {\r\n      state.names[payload.index] = payload.name;\r\n      localStorage.setItem(characters, JSON.stringify({ names: state.names, UID: state.UID }))\r\n    },\r\n    deleteCharacter: (state, { payload }) => {\r\n      var newNames = Array.from(state.names);\r\n      var newUID = Array.from(state.UID);\r\n      newNames.splice(payload.index, 1);\r\n      newUID.splice(payload.index, 1);\r\n      state.names = newNames;\r\n      state.UID = newUID;\r\n      localStorage.setItem(characters, JSON.stringify({ names: newNames, UID: newUID }))\r\n    },\r\n  },\r\n});\r\n\r\nexport const {\r\n  addNewCharacter,\r\n  renameCharacter,\r\n  deleteCharacter,\r\n} = characterSlice.actions;\r\nexport const selectCharacters = (state) => state.characters;\r\nexport default characterSlice.reducer;\r\n","import React, { useState } from \"react\";\r\nimport WeaponField from \"./WeaponField.js\";\r\nimport CharacterField from \"./CharacterField.js\";\r\nimport BuffsField from \"./BuffsField.js\";\r\nimport ArtifactsView from \"./ArtifactsView.js\";\r\nimport { Button } from \"./utils/Button.js\";\r\nimport DamageCalc from \"./DamageField.js\";\r\nimport \"../css/SheetView.css\";\r\nimport { selectSheet, updateSheet } from \"../features/sheet/sheetSlice.js\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { calcStats } from \"../features/totalStats/totalStatsSlice.js\";\r\nimport {\r\n  deleteCharacter,\r\n  renameCharacter,\r\n  selectCharacters,\r\n} from \"../features/sheet/charactersSlice.js\";\r\n\r\nconst StatsView = \"Stats\";\r\nconst DamageView = \"Damage Calc\";\r\nconst ExportView = \"Export\";\r\n\r\nconst StatsViewRender = () => (\r\n  <>\r\n    <div className=\"section__mainBody--row\">\r\n      <CharacterField />\r\n      <WeaponField />\r\n      <ArtifactsView />\r\n    </div>\r\n    <BuffsField />\r\n  </>\r\n);\r\n// const BuffViewRender = () => ;\r\nconst DamageFieldNameRender = () => <DamageCalc />;\r\nconst Export = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const characters = { ...useSelector(selectCharacters) };\r\n  const dispatch = useDispatch();\r\n  const [textInput, setText] = useState(\"\");\r\n  const [deleteText, updateDelete] = useState(\"Delete Sheet\");\r\n  return (\r\n    <>\r\n      <div style={{ display: \"flex\" }}>\r\n        <textarea\r\n          key={props.currentSheet}\r\n          className=\"body__textarea\"\r\n          onChange={(e) => {\r\n            setText(e.target.value);\r\n          }}\r\n          defaultValue={textInput}\r\n        />\r\n        <div>\r\n          <div>\r\n            <Button\r\n              onClick={() => {\r\n                try {\r\n                  const input = JSON.parse(textInput);\r\n                  input.currentSheet = props.currentSheet;\r\n                  input.view = StatsView;\r\n                  dispatch(updateSheet(input));\r\n                  dispatch(calcStats(input));\r\n                } catch (e) {\r\n                  console.log(e);\r\n                }\r\n              }}\r\n            >\r\n              Import\r\n            </Button>\r\n          </div>\r\n          <div>\r\n            <Button\r\n              onClick={() => {\r\n                props.currentSheet = undefined;\r\n                props.view = undefined;\r\n                props.index = undefined;\r\n                setText(JSON.stringify(props));\r\n              }}\r\n            >\r\n              Export\r\n            </Button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n      <Button\r\n        className=\"Delete\"\r\n        onBlur={() => {\r\n          updateDelete(\"Delete Sheet\");\r\n        }}\r\n        onClick={() => {\r\n          if (deleteText.localeCompare(\"Delete Sheet\") === 0) {\r\n            updateDelete(\"Confirm?\");\r\n          } else {\r\n            const index = props.index;\r\n            const UID = characters.UID[index];\r\n            dispatch(\r\n              updateSheet({ currentSheet: undefined, index: undefined })\r\n            );\r\n            dispatch(deleteCharacter({ index: index }));\r\n            localStorage.removeItem(UID);\r\n          }\r\n        }}\r\n      >\r\n        {deleteText}\r\n      </Button>\r\n    </>\r\n  );\r\n};\r\nconst SheetView = () => {\r\n  const props = { ...useSelector(selectSheet) };\r\n  const dispatch = useDispatch();\r\n  const setView = (dispatch, view) => {\r\n    dispatch(updateSheet({ view: view }));\r\n  };\r\n  const currentView = props.view || StatsView;\r\n  var obj = {\r\n    [StatsView]: StatsViewRender(),\r\n    [DamageView]: DamageFieldNameRender(),\r\n    [ExportView]: Export(),\r\n  };\r\n  return (\r\n    <div key={props.currentSheet} className=\"section__mainBody\">\r\n      <div className=\"section__mainBody\">\r\n        {Object.keys(obj).map((view) =>\r\n          currentView.localeCompare(view) === 0 ? (\r\n            <div key={view}>\r\n              <div>\r\n                <input\r\n                  type={\"text\"}\r\n                  defaultValue={props.currentSheet}\r\n                  onBlur={(e) => {\r\n                    dispatch(\r\n                      renameCharacter({\r\n                        index: props.index,\r\n                        name: e.target.value,\r\n                      })\r\n                    );\r\n                    dispatch(updateSheet({ currentSheet: e.target.value }));\r\n                  }}\r\n                ></input>\r\n                {Object.keys(obj).map((view) => (\r\n                  <Button\r\n                    disabled={props.view === view}\r\n                    key={view}\r\n                    onClick={() => setView(dispatch, view)}\r\n                  >\r\n                    {view}\r\n                  </Button>\r\n                ))}\r\n              </div>\r\n              {obj[view]}\r\n            </div>\r\n          ) : null\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SheetView;\r\n","import React from \"react\";\r\nimport { savePage } from \"./utils/LoadPage.js\";\r\nclass SheetStore extends React.Component {\r\n  beforeUnload = () => {\r\n    savePage(this.props.uid, JSON.stringify(this.props.sheet));\r\n  };\r\n  componentDidMount = () => {\r\n    window.addEventListener(\"beforeunload\", this.beforeUnload.bind(this));\r\n  };\r\n\r\n  componentWillUnmount = () => {\r\n    window.removeEventListener(\"beforeunload\", this.beforeUnload.bind(this));\r\n  };\r\n\r\n  render = () => null;\r\n}\r\n\r\nexport default SheetStore;","import React, { useEffect } from \"react\";\r\nimport \"../css/App.css\";\r\nimport TotalStats from \"./TotalStats.js\";\r\nimport { Button } from \"./utils/Button.js\";\r\nimport CharacterView from \"./SheetView.js\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { loadSheet, selectSheet } from \"../features/sheet/sheetSlice\";\r\nimport {\r\n  addNewCharacter,\r\n  selectCharacters,\r\n} from \"../features/sheet/charactersSlice\";\r\nimport { savePage, loadPage } from \"./utils/LoadPage.js\";\r\nimport { calcStats } from \"../features/totalStats/totalStatsSlice\";\r\nimport SheetStore from \"./SheetStore.js\";\r\n\r\nconst Sheet = () => {\r\n  const dispatch = useDispatch();\r\n  const sheet = useSelector(selectSheet);\r\n  const characters = useSelector(selectCharacters);\r\n  const uid = characters.UID[sheet.index];\r\n  useEffect(() => {\r\n    window.addEventListener(\"unload\", savePage);\r\n    changePage(dispatch, 0);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  const changePage = (dispatch, index) => {\r\n    savePage(uid, JSON.stringify(sheet));\r\n    const state = loadPage(characters.UID[index]);\r\n    state.currentSheet = characters.names[index];\r\n    state.index = index;\r\n    dispatch(loadSheet(state));\r\n    dispatch(calcStats(state));\r\n  };\r\n  return (\r\n    <div className=\"section__App--row\">\r\n      <SheetStore sheet={sheet} uid={uid} />\r\n      <div className=\"section__navbar\">\r\n        <div className=\"section__App--column\">\r\n          {characters.names.map((key, index) => {\r\n            return (\r\n              <Button\r\n                style={{ width: \"-webkit-fill-available\" }}\r\n                key={characters.UID[index]}\r\n                disabled={sheet.index === key}\r\n                onClick={() => changePage(dispatch, index)}\r\n              >\r\n                {key}\r\n              </Button>\r\n            );\r\n          })}\r\n          <Button\r\n            onClick={() => {\r\n              dispatch(addNewCharacter({}));\r\n            }}\r\n          >\r\n            Add New Sheet\r\n          </Button>\r\n        </div>\r\n      </div>\r\n      {sheet.currentSheet ? (\r\n        <div className=\"section__mainBody section__App--row\">\r\n          <CharacterView />\r\n          <TotalStats />\r\n        </div>\r\n      ) : (\r\n        <> </>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Sheet;\r\n","import React from 'react';\r\nimport './App.css';\r\nimport Sheet from './js/Sheet.js';\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <header className=\"App-header\">\r\n        <Sheet/>\r\n\r\n      </header>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","import { configureStore } from \"@reduxjs/toolkit\";\r\nimport sheetReducer from \"../features/sheet/sheetSlice\";\r\nimport charactersReducer from \"../features/sheet/charactersSlice\";\r\nimport totalStatsReducer from \"../features/totalStats/totalStatsSlice\";\r\nexport default configureStore({\r\n  reducer: {\r\n    characters: charactersReducer,\r\n    sheet: sheetReducer,\r\n    stats: totalStatsReducer,\r\n  },\r\n});\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport store from './app/store';\r\nimport { Provider } from 'react-redux';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}